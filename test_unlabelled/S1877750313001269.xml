<?xml version="1.0" encoding="UTF-8"?>
<xocs:doc xsi:schemaLocation="http://www.elsevier.com/xml/xocs/dtd http://schema.elsevier.com/dtds/document/fulltext/xcr/xocs-article.xsd" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.elsevier.com/xml/ja/dtd" xmlns:ja="http://www.elsevier.com/xml/ja/dtd" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:tb="http://www.elsevier.com/xml/common/table/dtd" xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/dtd" xmlns:ce="http://www.elsevier.com/xml/common/dtd" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:cals="http://www.elsevier.com/xml/common/cals/dtd"><xocs:meta><xocs:content-family>serial</xocs:content-family><xocs:content-type>JL</xocs:content-type><xocs:cid>280179</xocs:cid><xocs:ssids><xocs:ssid type="alllist">291210</xocs:ssid><xocs:ssid type="subj">291773</xocs:ssid><xocs:ssid type="subj">291791</xocs:ssid><xocs:ssid type="subj">291867</xocs:ssid><xocs:ssid type="subj">291869</xocs:ssid><xocs:ssid type="subj">291870</xocs:ssid><xocs:ssid type="subj">291873</xocs:ssid><xocs:ssid type="content">31</xocs:ssid><xocs:ssid type="oa">90</xocs:ssid></xocs:ssids><xocs:srctitle>Journal of Computational Science</xocs:srctitle><xocs:normalized-srctitle>JOURNALCOMPUTATIONALSCIENCE</xocs:normalized-srctitle><xocs:orig-load-date yyyymmdd="20131101">2013-11-01</xocs:orig-load-date><xocs:ew-transaction-id>2014-07-04T12:51:35</xocs:ew-transaction-id><xocs:eid>1-s2.0-S1877750313001269</xocs:eid><xocs:pii-formatted>S1877-7503(13)00126-9</xocs:pii-formatted><xocs:pii-unformatted>S1877750313001269</xocs:pii-unformatted><xocs:doi>10.1016/j.jocs.2013.10.009</xocs:doi><xocs:item-stage>S300</xocs:item-stage><xocs:item-version-number>S300.1</xocs:item-version-number><xocs:item-weight>FULL-TEXT</xocs:item-weight><xocs:hub-eid>1-s2.0-S1877750313X00079</xocs:hub-eid><xocs:timestamp yyyymmdd="20140704">2014-07-04T09:44:49.717965-04:00</xocs:timestamp><xocs:dco>0</xocs:dco><xocs:tomb>0</xocs:tomb><xocs:date-search-begin>20140101</xocs:date-search-begin><xocs:date-search-end>20140131</xocs:date-search-end><xocs:year-nav>2014</xocs:year-nav><xocs:indexeddate epoch="1383264000">2013-11-01T00:00:00Z</xocs:indexeddate><xocs:articleinfo>articleinfo articletitlenorm authfirstinitialnorm authfirstsurnamenorm cid cids contenttype copyright crossmark dateloaded dateloadedtxt datesearch datesort dateupdated dco docsubtype doctype doi eid ewtransactionid fundingbodyid hubeid indexeddate issfirst issn issnnorm issuelist itemstage itemtransactionid itemweight oauserlicense openaccess openarchive pg pgfirst pglast pii piinorm pubdateend pubdatestart pubdatetxt pubyr sortorder sponsoredaccesstype srctitle srctitlenorm srctype subheadings tomb volfirst volissue volumelist webpdf webpdfpagecount yearnav figure body acknowledge affil articletitle auth authfirstini authfull authkeywords authlast footnotes highlightsabst primabst ref vitae alllist content oa subj ssids</xocs:articleinfo><xocs:issns><xocs:issn-primary-formatted>1877-7503</xocs:issn-primary-formatted><xocs:issn-primary-unformatted>18777503</xocs:issn-primary-unformatted></xocs:issns><xocs:sponsored-access-type>UNLIMITED</xocs:sponsored-access-type><xocs:funding-body-id>EPSRCPP</xocs:funding-body-id><xocs:crossmark is-crossmark="1">true</xocs:crossmark><xocs:vol-first>5</xocs:vol-first><xocs:volume-list><xocs:volume>5</xocs:volume></xocs:volume-list><xocs:iss-first>1</xocs:iss-first><xocs:issue-list><xocs:issue>1</xocs:issue></xocs:issue-list><xocs:vol-iss-suppl-text>Volume 5, Issue 1</xocs:vol-iss-suppl-text><xocs:sort-order>6</xocs:sort-order><xocs:first-fp>51</xocs:first-fp><xocs:last-lp>62</xocs:last-lp><xocs:pages><xocs:first-page>51</xocs:first-page><xocs:last-page>62</xocs:last-page></xocs:pages><xocs:cover-date-orig><xocs:start-date>201401</xocs:start-date></xocs:cover-date-orig><xocs:cover-date-text>January 2014</xocs:cover-date-text><xocs:cover-date-start>2014-01-01</xocs:cover-date-start><xocs:cover-date-end>2014-01-31</xocs:cover-date-end><xocs:cover-date-year>2014</xocs:cover-date-year><xocs:document-type>article</xocs:document-type><xocs:document-subtype>fla</xocs:document-subtype><xocs:copyright-line>Copyright Â© 2013 Elsevier B.V.</xocs:copyright-line><xocs:normalized-article-title>FLEXIBLECOMPOSITIONEXECUTIONLARGESCALEAPPLICATIONSDISTRIBUTEDEINFRASTRUCTURES</xocs:normalized-article-title><xocs:normalized-first-auth-surname>ZASADA</xocs:normalized-first-auth-surname><xocs:normalized-first-auth-initial>S</xocs:normalized-first-auth-initial><xocs:item-toc><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>1</xocs:item-toc-label><xocs:item-toc-section-title>Introduction</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>2</xocs:item-toc-label><xocs:item-toc-section-title>Service oriented computational science</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>3</xocs:item-toc-label><xocs:item-toc-section-title>User requirements</xocs:item-toc-section-title><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>3.1</xocs:item-toc-label><xocs:item-toc-section-title>The Application Interaction Model</xocs:item-toc-section-title></xocs:item-toc-entry></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4</xocs:item-toc-label><xocs:item-toc-section-title>The Application Hosting Environment</xocs:item-toc-section-title><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.1</xocs:item-toc-label><xocs:item-toc-section-title>The architecture of AHE 3.0</xocs:item-toc-section-title><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.1.1</xocs:item-toc-label><xocs:item-toc-section-title>AHE runtime module</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.1.2</xocs:item-toc-label><xocs:item-toc-section-title>AHE engine module</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.1.3</xocs:item-toc-label><xocs:item-toc-section-title>AHE connector module</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.1.4</xocs:item-toc-label><xocs:item-toc-section-title>AHE interface module</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.1.5</xocs:item-toc-label><xocs:item-toc-section-title>AHE security module</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.1.6</xocs:item-toc-label><xocs:item-toc-section-title>AHE transfer module</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.1.7</xocs:item-toc-label><xocs:item-toc-section-title>RESTful web service</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.1.8</xocs:item-toc-label><xocs:item-toc-section-title>AHE workflow engine</xocs:item-toc-section-title></xocs:item-toc-entry></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.2</xocs:item-toc-label><xocs:item-toc-section-title>AHE client</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>4.3</xocs:item-toc-label><xocs:item-toc-section-title>AHE application life cycle</xocs:item-toc-section-title></xocs:item-toc-entry></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>5</xocs:item-toc-label><xocs:item-toc-section-title>Securing AHE 3.0 with audited credential delegation</xocs:item-toc-section-title><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>5.1</xocs:item-toc-label><xocs:item-toc-section-title>Integration with the Application Hosting Environment</xocs:item-toc-section-title></xocs:item-toc-entry></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>6</xocs:item-toc-label><xocs:item-toc-section-title>Deployment of AHE 3.0</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>7</xocs:item-toc-label><xocs:item-toc-section-title>AHE 3.0: comparison with AHE 2.0</xocs:item-toc-section-title><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>7.1</xocs:item-toc-label><xocs:item-toc-section-title>Evaluation of the Application Interaction Model</xocs:item-toc-section-title></xocs:item-toc-entry></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>8</xocs:item-toc-label><xocs:item-toc-section-title>AHE 3.0 in action: e-infrastructure based multiscale simulation</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:sections"><xocs:item-toc-label>9</xocs:item-toc-label><xocs:item-toc-section-title>Conclusions and future work</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:acknowledgment"><xocs:item-toc-section-title>Acknowledgements</xocs:item-toc-section-title></xocs:item-toc-entry><xocs:item-toc-entry ref-elem="ce:bibliography"><xocs:item-toc-section-title>References</xocs:item-toc-section-title></xocs:item-toc-entry></xocs:item-toc><xocs:references><xocs:ref-info refid="sbref0005"><xocs:ref-normalized-surname>TUREK</xocs:ref-normalized-surname><xocs:ref-pub-year>2007</xocs:ref-pub-year><xocs:ref-first-fp>31</xocs:ref-first-fp><xocs:ref-last-lp>33</xocs:ref-last-lp><xocs:ref-normalized-initial>D</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0010"><xocs:ref-normalized-surname>DONGARRA</xocs:ref-normalized-surname><xocs:ref-pub-year>2007</xocs:ref-pub-year><xocs:ref-first-fp>1</xocs:ref-first-fp><xocs:ref-last-lp>10</xocs:ref-last-lp><xocs:ref-normalized-initial>J</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="oref0015"/><xocs:ref-info refid="sbref0020"><xocs:ref-normalized-surname>FOSTER</xocs:ref-normalized-surname><xocs:ref-pub-year>2001</xocs:ref-pub-year><xocs:ref-first-fp>3</xocs:ref-first-fp><xocs:ref-last-lp>23</xocs:ref-last-lp><xocs:ref-normalized-initial>I</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0025"><xocs:ref-normalized-surname>CHIN</xocs:ref-normalized-surname><xocs:ref-pub-year>2004</xocs:ref-pub-year><xocs:ref-normalized-initial>J</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>TOWARDSTRACTABLETOOLKITSFORGRIDAPLEAFORLIGHTWEIGHTUSEABLEMIDDLEWARETECHREP</xocs:ref-normalized-srctitle></xocs:ref-info><xocs:ref-info refid="sbref0030"><xocs:ref-normalized-surname>HALLINGBROWN</xocs:ref-normalized-surname><xocs:ref-pub-year>2009</xocs:ref-pub-year><xocs:ref-first-fp>2705</xocs:ref-first-fp><xocs:ref-last-lp>2716</xocs:ref-last-lp><xocs:ref-normalized-initial>M</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0035"><xocs:ref-normalized-surname>COVENEY</xocs:ref-normalized-surname><xocs:ref-pub-year>2007</xocs:ref-pub-year><xocs:ref-first-fp>406</xocs:ref-first-fp><xocs:ref-last-lp>418</xocs:ref-last-lp><xocs:ref-normalized-initial>P</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0040"><xocs:ref-normalized-surname>ZASADA</xocs:ref-normalized-surname><xocs:ref-pub-year>2009</xocs:ref-pub-year><xocs:ref-first-fp>2513</xocs:ref-first-fp><xocs:ref-last-lp>2525</xocs:ref-last-lp><xocs:ref-normalized-initial>S</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0045"><xocs:ref-normalized-surname>SADIQ</xocs:ref-normalized-surname><xocs:ref-pub-year>2008</xocs:ref-pub-year><xocs:ref-first-fp>1909</xocs:ref-first-fp><xocs:ref-last-lp>1919</xocs:ref-last-lp><xocs:ref-normalized-initial>S</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0050"><xocs:ref-normalized-surname>SUTER</xocs:ref-normalized-surname><xocs:ref-pub-year>2007</xocs:ref-pub-year><xocs:ref-first-fp>8248</xocs:ref-first-fp><xocs:ref-last-lp>8259</xocs:ref-last-lp><xocs:ref-normalized-initial>J</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0055"><xocs:ref-normalized-surname>FIELDING</xocs:ref-normalized-surname><xocs:ref-pub-year>2000</xocs:ref-pub-year><xocs:ref-normalized-initial>R</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>ARCHITECTURALSTYLESDESIGNNETWORKBASEDSOFTWAREARCHITECTURES</xocs:ref-normalized-srctitle></xocs:ref-info><xocs:ref-info refid="sbref0060"><xocs:ref-normalized-surname>GRAHAM</xocs:ref-normalized-surname><xocs:ref-pub-year>2006</xocs:ref-pub-year><xocs:ref-normalized-initial>S</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>WEBSERVICESRESOURCEFRAMEWORKTECHREP</xocs:ref-normalized-srctitle></xocs:ref-info><xocs:ref-info refid="oref0065"/><xocs:ref-info refid="sbref0070"><xocs:ref-normalized-surname>COVENEY</xocs:ref-normalized-surname><xocs:ref-pub-year>2005</xocs:ref-pub-year><xocs:ref-first-fp>1707</xocs:ref-first-fp><xocs:ref-last-lp>1713</xocs:ref-last-lp><xocs:ref-normalized-initial>P</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0075"><xocs:ref-normalized-surname>MANOS</xocs:ref-normalized-surname><xocs:ref-pub-year>2008</xocs:ref-pub-year><xocs:ref-first-fp>35</xocs:ref-first-fp><xocs:ref-last-lp>45</xocs:ref-last-lp><xocs:ref-normalized-initial>S</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0080"><xocs:ref-normalized-surname>BECKLES</xocs:ref-normalized-surname><xocs:ref-pub-year>2005</xocs:ref-pub-year><xocs:ref-first-fp>74</xocs:ref-first-fp><xocs:ref-last-lp>101</xocs:ref-last-lp><xocs:ref-normalized-initial>B</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0085"><xocs:ref-normalized-surname>ZASADA</xocs:ref-normalized-surname><xocs:ref-pub-year>2011</xocs:ref-pub-year><xocs:ref-first-fp>3413</xocs:ref-first-fp><xocs:ref-last-lp>3428</xocs:ref-last-lp><xocs:ref-normalized-initial>S</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0090"><xocs:ref-normalized-surname>BOGHOSIAN</xocs:ref-normalized-surname><xocs:ref-pub-year>2007</xocs:ref-pub-year><xocs:ref-first-fp>351</xocs:ref-first-fp><xocs:ref-last-lp>364</xocs:ref-last-lp><xocs:ref-normalized-initial>B</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="oref0095"/><xocs:ref-info refid="sbref0100"><xocs:ref-normalized-surname>ZASADA</xocs:ref-normalized-surname><xocs:ref-pub-year>2012</xocs:ref-pub-year><xocs:ref-first-fp>65</xocs:ref-first-fp><xocs:ref-last-lp>74</xocs:ref-last-lp><xocs:ref-normalized-initial>S</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>PROCEEDINGS2012IEEEACM16THINTERNATIONALSYMPOSIUMDISTRIBUTEDSIMULATIONREALTIMEAPPLICATIONS</xocs:ref-normalized-srctitle><xocs:ref-normalized-article-title>DISTRIBUTEDINFRASTRUCTUREFORMULTISCALECOMPUTING</xocs:ref-normalized-article-title></xocs:ref-info><xocs:ref-info refid="oref0105"/><xocs:ref-info refid="oref0110"/><xocs:ref-info refid="oref0115"/><xocs:ref-info refid="oref0120"/><xocs:ref-info refid="oref0125"/><xocs:ref-info refid="oref0130"/><xocs:ref-info refid="sbref0135"><xocs:ref-normalized-surname>KUROWSKI</xocs:ref-normalized-surname><xocs:ref-pub-year>2009</xocs:ref-pub-year><xocs:ref-first-fp>387</xocs:ref-first-fp><xocs:ref-last-lp>396</xocs:ref-last-lp><xocs:ref-normalized-initial>K</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0140"><xocs:ref-normalized-surname>HAIDAR</xocs:ref-normalized-surname><xocs:ref-pub-year>2011</xocs:ref-pub-year><xocs:ref-first-fp>462</xocs:ref-first-fp><xocs:ref-last-lp>473</xocs:ref-last-lp><xocs:ref-normalized-initial>A</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="oref0145"/><xocs:ref-info refid="sbref0150"><xocs:ref-normalized-surname>BECKMAN</xocs:ref-normalized-surname><xocs:ref-pub-year>2007</xocs:ref-pub-year><xocs:ref-first-fp>295</xocs:ref-first-fp><xocs:ref-last-lp>311</xocs:ref-last-lp><xocs:ref-normalized-initial>P</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0155"><xocs:ref-normalized-surname>PICKLES</xocs:ref-normalized-surname><xocs:ref-pub-year>2005</xocs:ref-pub-year><xocs:ref-first-fp>1843</xocs:ref-first-fp><xocs:ref-last-lp>1853</xocs:ref-last-lp><xocs:ref-normalized-initial>S</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0160"><xocs:ref-normalized-surname>CAVANESS</xocs:ref-normalized-surname><xocs:ref-pub-year>2006</xocs:ref-pub-year><xocs:ref-normalized-initial>C</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>QUARTZJOBSCHEDULINGFRAMEWORKBUILDINGOPENSOURCEENTERPRISEAPPLICATIONS</xocs:ref-normalized-srctitle></xocs:ref-info><xocs:ref-info refid="sbref0165"><xocs:ref-normalized-surname>SINNOTT</xocs:ref-normalized-surname><xocs:ref-pub-year>2006</xocs:ref-pub-year><xocs:ref-first-fp>28</xocs:ref-first-fp><xocs:ref-last-lp>29</xocs:ref-last-lp><xocs:ref-normalized-initial>R</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>IEEEINTERNATIONALCONFERENCEGRIDCOMPUTING</xocs:ref-normalized-srctitle><xocs:ref-normalized-article-title>SHIBBOLETHBASEDACCESSUSAGEGRIDRESOURCES</xocs:ref-normalized-article-title></xocs:ref-info><xocs:ref-info refid="sbref0170"><xocs:ref-normalized-surname>NOVOTNY</xocs:ref-normalized-surname><xocs:ref-pub-year>2002</xocs:ref-pub-year><xocs:ref-first-fp>104</xocs:ref-first-fp><xocs:ref-last-lp>111</xocs:ref-last-lp><xocs:ref-normalized-initial>J</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>10THIEEEINTERNATIONALSYMPOSIUMHIGHPERFORMANCEDISTRIBUTEDCOMPUTING2001IEEEPROCEEDINGS</xocs:ref-normalized-srctitle><xocs:ref-normalized-article-title>ONLINECREDENTIALREPOSITORYFORGRIDMYPROXY</xocs:ref-normalized-article-title></xocs:ref-info><xocs:ref-info refid="sbref0175"><xocs:ref-normalized-surname>WANG</xocs:ref-normalized-surname><xocs:ref-pub-year>2009</xocs:ref-pub-year><xocs:ref-first-fp>338</xocs:ref-first-fp><xocs:ref-last-lp>341</xocs:ref-last-lp><xocs:ref-normalized-initial>X</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>FIFTHINTERNATIONALCONFERENCEINFORMATIONASSURANCESECURITY2009</xocs:ref-normalized-srctitle><xocs:ref-normalized-article-title>SHIBBOLETHACCESSFORRESOURCESNATIONALGRIDSERVICESARONGS</xocs:ref-normalized-article-title></xocs:ref-info><xocs:ref-info refid="sbref0180"><xocs:ref-normalized-surname>ALFIERI</xocs:ref-normalized-surname><xocs:ref-pub-year>2004</xocs:ref-pub-year><xocs:ref-first-fp>33</xocs:ref-first-fp><xocs:ref-last-lp>40</xocs:ref-last-lp><xocs:ref-normalized-initial>R</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>GRIDCOMPUTING</xocs:ref-normalized-srctitle><xocs:ref-normalized-article-title>VOMSAUTHORIZATIONSYSTEMFORVIRTUALORGANIZATIONS</xocs:ref-normalized-article-title></xocs:ref-info><xocs:ref-info refid="sbref0185"><xocs:ref-normalized-surname>HAIDAR</xocs:ref-normalized-surname><xocs:ref-pub-year>2009</xocs:ref-pub-year><xocs:ref-first-fp>41</xocs:ref-first-fp><xocs:ref-last-lp>50</xocs:ref-last-lp><xocs:ref-normalized-initial>A</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>PROCEEDINGSFORMALASPECTSVIRTUALORGANISATIONS</xocs:ref-normalized-srctitle><xocs:ref-normalized-article-title>FORMALMODELLINGAUSABLEIDENTITYMANAGEMENTSOLUTIONFORVIRTUALORGANISATIONS</xocs:ref-normalized-article-title></xocs:ref-info><xocs:ref-info refid="oref0190"/><xocs:ref-info refid="oref0195"/><xocs:ref-info refid="sbref0200"><xocs:ref-normalized-surname>ABDALLAH</xocs:ref-normalized-surname><xocs:ref-pub-year>2006</xocs:ref-pub-year><xocs:ref-first-fp>282</xocs:ref-first-fp><xocs:ref-last-lp>292</xocs:ref-last-lp><xocs:ref-normalized-initial>A</xocs:ref-normalized-initial><xocs:ref-normalized-srctitle>SOFTWAREENGINEERINGWORKSHOP2006</xocs:ref-normalized-srctitle><xocs:ref-normalized-article-title>FORMALZSPECIFICATIONSSEVERALFLATROLEBASEDACCESSCONTROLMODELS</xocs:ref-normalized-article-title></xocs:ref-info><xocs:ref-info refid="oref0205"/><xocs:ref-info refid="oref0210"/><xocs:ref-info refid="sbref0215"><xocs:ref-normalized-surname>HUNTER</xocs:ref-normalized-surname><xocs:ref-pub-year>2010</xocs:ref-pub-year><xocs:ref-first-fp>2595</xocs:ref-first-fp><xocs:ref-last-lp>2614</xocs:ref-last-lp><xocs:ref-normalized-initial>P</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="sbref0220"><xocs:ref-normalized-surname>PITTFRANCIS</xocs:ref-normalized-surname><xocs:ref-pub-year>2009</xocs:ref-pub-year><xocs:ref-first-fp>2452</xocs:ref-first-fp><xocs:ref-last-lp>2471</xocs:ref-last-lp><xocs:ref-normalized-initial>J</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="oref0225"/><xocs:ref-info refid="sbref0230"><xocs:ref-normalized-surname>MALAWSKI</xocs:ref-normalized-surname><xocs:ref-pub-year>2010</xocs:ref-pub-year><xocs:ref-first-fp>138</xocs:ref-first-fp><xocs:ref-last-lp>146</xocs:ref-last-lp><xocs:ref-normalized-initial>M</xocs:ref-normalized-initial></xocs:ref-info><xocs:ref-info refid="oref0235"/><xocs:ref-info refid="oref0240"/><xocs:ref-info refid="oref0245"/></xocs:references><xocs:attachment-metadata-doc><xocs:attachment-set-type>item</xocs:attachment-set-type><xocs:pii-formatted>S1877-7503(13)00126-9</xocs:pii-formatted><xocs:pii-unformatted>S1877750313001269</xocs:pii-unformatted><xocs:eid>1-s2.0-S1877750313001269</xocs:eid><xocs:doi>10.1016/j.jocs.2013.10.009</xocs:doi><xocs:cid>280179</xocs:cid><xocs:timestamp>2014-07-04T09:44:49.717965-04:00</xocs:timestamp><xocs:path>/280179/1-s2.0-S1877750313X00079/1-s2.0-S1877750313001269/</xocs:path><xocs:cover-date-start>2014-01-01</xocs:cover-date-start><xocs:cover-date-end>2014-01-31</xocs:cover-date-end><xocs:sponsored-access-type>UNLIMITED</xocs:sponsored-access-type><xocs:funding-body-id>EPSRCPP</xocs:funding-body-id><xocs:attachments><xocs:web-pdf><xocs:attachment-eid>1-s2.0-S1877750313001269-main.pdf</xocs:attachment-eid><xocs:filename>main.pdf</xocs:filename><xocs:extension>pdf</xocs:extension><xocs:pdf-optimized>true</xocs:pdf-optimized><xocs:filesize>1572929</xocs:filesize><xocs:web-pdf-purpose>MAIN</xocs:web-pdf-purpose><xocs:web-pdf-page-count>12</xocs:web-pdf-page-count><xocs:web-pdf-images><xocs:web-pdf-image><xocs:attachment-eid>1-s2.0-S1877750313001269-main_1.png</xocs:attachment-eid><xocs:filename>main_1.png</xocs:filename><xocs:extension>png</xocs:extension><xocs:filesize>135500</xocs:filesize><xocs:pixel-height>849</xocs:pixel-height><xocs:pixel-width>656</xocs:pixel-width><xocs:attachment-type>IMAGE-WEB-PDF</xocs:attachment-type><xocs:pdf-page-num>1</xocs:pdf-page-num></xocs:web-pdf-image></xocs:web-pdf-images></xocs:web-pdf><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr5.jpg</xocs:attachment-eid><xocs:file-basename>gr5</xocs:file-basename><xocs:filename>gr5.jpg</xocs:filename><xocs:extension>jpg</xocs:extension><xocs:filesize>43522</xocs:filesize><xocs:pixel-height>339</xocs:pixel-height><xocs:pixel-width>527</xocs:pixel-width><xocs:attachment-type>IMAGE-DOWNSAMPLED</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr4.jpg</xocs:attachment-eid><xocs:file-basename>gr4</xocs:file-basename><xocs:filename>gr4.jpg</xocs:filename><xocs:extension>jpg</xocs:extension><xocs:filesize>43726</xocs:filesize><xocs:pixel-height>321</xocs:pixel-height><xocs:pixel-width>452</xocs:pixel-width><xocs:attachment-type>IMAGE-DOWNSAMPLED</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr3.jpg</xocs:attachment-eid><xocs:file-basename>gr3</xocs:file-basename><xocs:filename>gr3.jpg</xocs:filename><xocs:extension>jpg</xocs:extension><xocs:filesize>37698</xocs:filesize><xocs:pixel-height>393</xocs:pixel-height><xocs:pixel-width>393</xocs:pixel-width><xocs:attachment-type>IMAGE-DOWNSAMPLED</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr2.jpg</xocs:attachment-eid><xocs:file-basename>gr2</xocs:file-basename><xocs:filename>gr2.jpg</xocs:filename><xocs:extension>jpg</xocs:extension><xocs:filesize>71417</xocs:filesize><xocs:pixel-height>514</xocs:pixel-height><xocs:pixel-width>527</xocs:pixel-width><xocs:attachment-type>IMAGE-DOWNSAMPLED</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr1.jpg</xocs:attachment-eid><xocs:file-basename>gr1</xocs:file-basename><xocs:filename>gr1.jpg</xocs:filename><xocs:extension>jpg</xocs:extension><xocs:filesize>28901</xocs:filesize><xocs:pixel-height>267</xocs:pixel-height><xocs:pixel-width>393</xocs:pixel-width><xocs:attachment-type>IMAGE-DOWNSAMPLED</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-fx4.jpg</xocs:attachment-eid><xocs:file-basename>fx4</xocs:file-basename><xocs:filename>fx4.jpg</xocs:filename><xocs:extension>jpg</xocs:extension><xocs:filesize>15117</xocs:filesize><xocs:pixel-height>151</xocs:pixel-height><xocs:pixel-width>113</xocs:pixel-width><xocs:attachment-type>IMAGE-DOWNSAMPLED</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-fx3.jpg</xocs:attachment-eid><xocs:file-basename>fx3</xocs:file-basename><xocs:filename>fx3.jpg</xocs:filename><xocs:extension>jpg</xocs:extension><xocs:filesize>13867</xocs:filesize><xocs:pixel-height>151</xocs:pixel-height><xocs:pixel-width>113</xocs:pixel-width><xocs:attachment-type>IMAGE-DOWNSAMPLED</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-fx2.jpg</xocs:attachment-eid><xocs:file-basename>fx2</xocs:file-basename><xocs:filename>fx2.jpg</xocs:filename><xocs:extension>jpg</xocs:extension><xocs:filesize>14415</xocs:filesize><xocs:pixel-height>151</xocs:pixel-height><xocs:pixel-width>113</xocs:pixel-width><xocs:attachment-type>IMAGE-DOWNSAMPLED</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-fx1.jpg</xocs:attachment-eid><xocs:file-basename>fx1</xocs:file-basename><xocs:filename>fx1.jpg</xocs:filename><xocs:extension>jpg</xocs:extension><xocs:filesize>13036</xocs:filesize><xocs:pixel-height>151</xocs:pixel-height><xocs:pixel-width>113</xocs:pixel-width><xocs:attachment-type>IMAGE-DOWNSAMPLED</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr5.sml</xocs:attachment-eid><xocs:file-basename>gr5</xocs:file-basename><xocs:filename>gr5.sml</xocs:filename><xocs:extension>sml</xocs:extension><xocs:filesize>8037</xocs:filesize><xocs:pixel-height>141</xocs:pixel-height><xocs:pixel-width>219</xocs:pixel-width><xocs:attachment-type>IMAGE-THUMBNAIL</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr4.sml</xocs:attachment-eid><xocs:file-basename>gr4</xocs:file-basename><xocs:filename>gr4.sml</xocs:filename><xocs:extension>sml</xocs:extension><xocs:filesize>6968</xocs:filesize><xocs:pixel-height>156</xocs:pixel-height><xocs:pixel-width>219</xocs:pixel-width><xocs:attachment-type>IMAGE-THUMBNAIL</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr3.sml</xocs:attachment-eid><xocs:file-basename>gr3</xocs:file-basename><xocs:filename>gr3.sml</xocs:filename><xocs:extension>sml</xocs:extension><xocs:filesize>5115</xocs:filesize><xocs:pixel-height>164</xocs:pixel-height><xocs:pixel-width>164</xocs:pixel-width><xocs:attachment-type>IMAGE-THUMBNAIL</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr2.sml</xocs:attachment-eid><xocs:file-basename>gr2</xocs:file-basename><xocs:filename>gr2.sml</xocs:filename><xocs:extension>sml</xocs:extension><xocs:filesize>7938</xocs:filesize><xocs:pixel-height>164</xocs:pixel-height><xocs:pixel-width>168</xocs:pixel-width><xocs:attachment-type>IMAGE-THUMBNAIL</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-gr1.sml</xocs:attachment-eid><xocs:file-basename>gr1</xocs:file-basename><xocs:filename>gr1.sml</xocs:filename><xocs:extension>sml</xocs:extension><xocs:filesize>7953</xocs:filesize><xocs:pixel-height>149</xocs:pixel-height><xocs:pixel-width>219</xocs:pixel-width><xocs:attachment-type>IMAGE-THUMBNAIL</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-fx4.sml</xocs:attachment-eid><xocs:file-basename>fx4</xocs:file-basename><xocs:filename>fx4.sml</xocs:filename><xocs:extension>sml</xocs:extension><xocs:filesize>9435</xocs:filesize><xocs:pixel-height>164</xocs:pixel-height><xocs:pixel-width>123</xocs:pixel-width><xocs:attachment-type>IMAGE-THUMBNAIL</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-fx3.sml</xocs:attachment-eid><xocs:file-basename>fx3</xocs:file-basename><xocs:filename>fx3.sml</xocs:filename><xocs:extension>sml</xocs:extension><xocs:filesize>9711</xocs:filesize><xocs:pixel-height>164</xocs:pixel-height><xocs:pixel-width>123</xocs:pixel-width><xocs:attachment-type>IMAGE-THUMBNAIL</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-fx2.sml</xocs:attachment-eid><xocs:file-basename>fx2</xocs:file-basename><xocs:filename>fx2.sml</xocs:filename><xocs:extension>sml</xocs:extension><xocs:filesize>10682</xocs:filesize><xocs:pixel-height>164</xocs:pixel-height><xocs:pixel-width>123</xocs:pixel-width><xocs:attachment-type>IMAGE-THUMBNAIL</xocs:attachment-type></xocs:attachment><xocs:attachment><xocs:attachment-eid>1-s2.0-S1877750313001269-fx1.sml</xocs:attachment-eid><xocs:file-basename>fx1</xocs:file-basename><xocs:filename>fx1.sml</xocs:filename><xocs:extension>sml</xocs:extension><xocs:filesize>10755</xocs:filesize><xocs:pixel-height>164</xocs:pixel-height><xocs:pixel-width>123</xocs:pixel-width><xocs:attachment-type>IMAGE-THUMBNAIL</xocs:attachment-type></xocs:attachment></xocs:attachments></xocs:attachment-metadata-doc><xocs:refkeys><xocs:refkey3>ZASADAX2014X51</xocs:refkey3><xocs:refkey4lp>ZASADAX2014X51X62</xocs:refkey4lp><xocs:refkey4ai>ZASADAX2014X51XS</xocs:refkey4ai><xocs:refkey5>ZASADAX2014X51X62XS</xocs:refkey5></xocs:refkeys><xocs:open-access><xocs:oa-article-status is-open-access="1" is-open-archive="0">Full</xocs:oa-article-status><xocs:oa-access-effective-date>2014-07-04T09:07:00Z</xocs:oa-access-effective-date><xocs:oa-sponsor><xocs:oa-sponsor-type>FundingBody</xocs:oa-sponsor-type><xocs:oa-sponsor-name>Engineering and Physical Sciences Research Council</xocs:oa-sponsor-name></xocs:oa-sponsor><xocs:oa-user-license>http://creativecommons.org/licenses/by/3.0/</xocs:oa-user-license></xocs:open-access></xocs:meta><xocs:serial-item><article version="5.2" xml:lang="en" docsubtype="fla" xmlns:sa="http://www.elsevier.com/xml/common/struct-aff/dtd"><item-info><jid>JOCS</jid><aid>239</aid><ce:pii>S1877-7503(13)00126-9</ce:pii><ce:doi>10.1016/j.jocs.2013.10.009</ce:doi><ce:copyright type="full-transfer" year="2013">Elsevier B.V.</ce:copyright></item-info><ce:floats><ce:figure id="fig0005"><ce:label>Fig. 1</ce:label><ce:caption id="cap0005"><ce:simple-para id="spar0035" view="all">The Application Interaction Model underpinning AHE. The application instance is the central entity representing each instance of an application that a user launches. All user interaction is mediated via the application instance, which supports operations to launch, monitor and terminate the application, and to manage data sharing.</ce:simple-para></ce:caption><ce:link locator="gr1"/></ce:figure><ce:figure id="fig0010"><ce:label>Fig. 2</ce:label><ce:caption id="cap0010"><ce:simple-para id="spar0040" view="all">The architecture of the AHE 3.0 server, showing the relationship between the different software modules.</ce:simple-para></ce:caption><ce:link locator="gr2"/></ce:figure><ce:figure id="fig0015"><ce:label>Fig. 3</ce:label><ce:caption id="cap0015"><ce:simple-para id="spar0045" view="all">The application life cycle. AHE server manages the transition of an application instance through a number of states, in order to stage data, execute an application, and handle failures.</ce:simple-para></ce:caption><ce:link locator="gr3"/></ce:figure><ce:figure id="fig0020"><ce:label>Fig. 4</ce:label><ce:caption id="cap0020"><ce:simple-para id="spar0050" view="all">Comparison of the mean time and standard deviation required to submit using AHE 2.0 and AHE 3.0 for batches of 10â200 jobs.</ce:simple-para></ce:caption><ce:link locator="gr4"/></ce:figure><ce:figure id="fig0025"><ce:label>Fig. 5</ce:label><ce:caption id="cap0025"><ce:simple-para id="spar0055" view="all">The architecture of a MAPPER loosely coupled application. AHE provides an interoperability layer to launch codes across a range of platforms.</ce:simple-para></ce:caption><ce:link locator="gr5"/></ce:figure></ce:floats><head><ce:title id="tit0005">Flexible composition and execution of large scale applications on distributed e-infrastructures</ce:title><ce:author-group id="aug0005"><ce:author id="aut0005" biographyid="vt0005"><ce:given-name>Stefan J.</ce:given-name><ce:surname>Zasada</ce:surname></ce:author><ce:author id="aut0010" biographyid="vt0010"><ce:given-name>David C.W.</ce:given-name><ce:surname>Chang</ce:surname><ce:cross-ref id="crf0005" refid="fn1"><ce:sup loc="post">1</ce:sup></ce:cross-ref></ce:author><ce:author id="aut0015" biographyid="vt0015"><ce:given-name>Ali N.</ce:given-name><ce:surname>Haidar</ce:surname><ce:cross-ref id="crf0010" refid="fn2"><ce:sup loc="post">2</ce:sup></ce:cross-ref></ce:author><ce:author id="aut0020" biographyid="vt0020"><ce:given-name>Peter V.</ce:given-name><ce:surname>Coveney</ce:surname><ce:cross-ref id="crf0015" refid="cor0005"><ce:sup loc="post">â</ce:sup></ce:cross-ref><ce:e-address id="eadd0005" type="email">p.v.coveney@ucl.ac.uk</ce:e-address></ce:author><ce:affiliation id="aff0005"><ce:textfn>Centre for Computational Science, University College London, 20 Gordon Street, London WC1H 0AJ, United Kingdom</ce:textfn><sa:affiliation><sa:organization>Centre for Computational Science, University College London</sa:organization><sa:address-line>20 Gordon Street</sa:address-line><sa:city>London</sa:city><sa:postal-code>WC1H 0AJ</sa:postal-code><sa:country>United Kingdom</sa:country></sa:affiliation></ce:affiliation><ce:correspondence id="cor0005"><ce:label>â</ce:label><ce:text>Corresponding author.</ce:text></ce:correspondence><ce:footnote id="fn1"><ce:label>1</ce:label><ce:note-para id="npar2005" view="all">Now at: The Graduate School of Biomedical Engineering, University of New South Wales, Sydney, Australia.</ce:note-para></ce:footnote><ce:footnote id="fn2"><ce:label>2</ce:label><ce:note-para id="npar1005" view="all">Now at: HSBC, Canada Square, London, UK.</ce:note-para></ce:footnote></ce:author-group><ce:date-received day="18" month="2" year="2013"/><ce:date-revised day="9" month="9" year="2013"/><ce:date-accepted day="24" month="10" year="2013"/><ce:abstract id="abs0005" class="author-highlights" view="all"><ce:abstract-sec id="abst0005" view="all"><ce:section-title id="sect0005">Highlights</ce:section-title><ce:simple-para id="spar0005" view="all"><ce:list id="list0020"><ce:list-item id="listitem0090"><ce:label>â¢</ce:label><ce:para id="p0005" view="all">We have developed the Application Interaction Model, to improve user experience when accessing e-infrastructure.</ce:para></ce:list-item><ce:list-item id="listitem0095"><ce:label>â¢</ce:label><ce:para id="p0010" view="all">We present out implementation of this model in version 3.0 of the Application Hosting Environment.</ce:para></ce:list-item><ce:list-item id="listitem0100"><ce:label>â¢</ce:label><ce:para id="p0015" view="all">We compare the performance of AHE3 and AHE2 to illustrate the benefits of using the new version of the software.</ce:para></ce:list-item><ce:list-item id="listitem0105"><ce:label>â¢</ce:label><ce:para id="p0020" view="all">Finally we describe the projects and users of AHE3.</ce:para></ce:list-item></ce:list></ce:simple-para></ce:abstract-sec></ce:abstract><ce:abstract id="abs0010" view="all" class="author"><ce:section-title id="sect0010">Abstract</ce:section-title><ce:abstract-sec id="abst0010" view="all"><ce:simple-para id="spar0010" view="all">Computer simulation is finding a role in an increasing number of scientific disciplines, concomitant with the rise in available computing power. Marshalling this power facilitates new, more effective and different research than has been hitherto possible. Realizing this inevitably requires access to computational power beyond the desktop, making use of clusters, supercomputers, data repositories, networks and distributed aggregations of these resources. The use of diverse e-infrastructure brings with it the ability to perform distributed multiscale simulations. Accessing one such resource entails a number of usability and security problems; when multiple geographically distributed resources are involved, the difficulty is compounded. In this paper we present a solution, the Application Hosting Environment,<ce:cross-ref id="crf0020" refid="fn0005"><ce:sup loc="post">3</ce:sup></ce:cross-ref><ce:footnote id="fn0005"><ce:label>3</ce:label><ce:note-para id="npar0005" view="all">AHE is available to download under the LGPL license from: <ce:inter-ref id="intr0005" xlink:href="https://sourceforge.net/projects/ahe3/" xlink:type="simple">https://sourceforge.net/projects/ahe3/</ce:inter-ref>.</ce:note-para></ce:footnote> which provides a Software as a Service layer on top of distributed e-infrastructure resources. We describe the performance and usability enhancements present in AHE version 3, and show how these have led to a high performance, easy to use gateway for computational scientists working in diverse application domains, from computational physics and chemistry, materials science to biology and biomedicine.</ce:simple-para></ce:abstract-sec></ce:abstract><ce:keywords id="kwd0005" class="keyword" xml:lang="en" view="all"><ce:section-title id="sect0015">Keywords</ce:section-title><ce:keyword id="kw0005"><ce:text>E-infrastructure</ce:text></ce:keyword><ce:keyword id="kw0010"><ce:text>High performance computing</ce:text></ce:keyword><ce:keyword id="kw0015"><ce:text>Application virtualization</ce:text></ce:keyword><ce:keyword id="kw0020"><ce:text>Usability</ce:text></ce:keyword></ce:keywords></head><body view="all"><ce:sections><ce:section id="sec0005" view="all"><ce:label>1</ce:label><ce:section-title id="sect0020">Introduction</ce:section-title><ce:para id="p0025" view="all">Today's computational scientists face a growing number of challenges which affect their ability to fully exploit the computational resources, made available to them via so called <ce:italic>e-infrastructures</ce:italic> (such as PRACE, EGI or EUDAT in Europe, or XSEDE in the USA). Firstly, they have an unprecedented amount of computational power available to them, which will continue to grow inexorably in the future, presenting many opportunities as well as challenges to an increasing number of scientific disciplines that rely on computer based modelling and simulation.</ce:para><ce:para id="p0030" view="all">Secondly, the architectures of these large scale high performance computing (HPC) machines point to a growing trend of computers comprised of hybrids of scalar and vector processors <ce:cross-refs id="crfs0005" refid="bib0005 bib0010">[1,2]</ce:cross-refs>. This requires application scientists to ensure their code is optimized to take full advantage of the hybrid architecture of a specific machine. Grid computing <ce:cross-refs id="crfs0010" refid="bib0015 bib0020">[3,4]</ce:cross-refs> has sought to simplify end user access to and use of HPC resources, but the middleware tools developed to realize the computational grid concept have seldom provided the transparency and ease of use envisaged <ce:cross-ref id="crf0025" refid="bib0025">[5]</ce:cross-ref>. The challenges described above are compounded when one attempts to invoke multiple resources, in order to achieve more than just the sum of their individual parts <ce:cross-ref id="crf0030" refid="bib0030">[6]</ce:cross-ref>.</ce:para><ce:para id="p0035" view="all">Alongside grid computing we have witnessed the development of cloud computing. Cloud computing represents a fast growing business model that seeks to commoditize computational infrastructure, and provide access to various distributed resources such as CPU, memory and storage (known as infrastructure services) and applications (software as services). It is a rapidly growing area due to major strategic investments from global software companies such as Microsoft, Amazon, Google and IBM. Cloud storage today is growing in popularity, particularly due to its shared data at low cost capabilities. Nonetheless, there are many security and legal issues in cloud computing that are yet to be resolved.</ce:para><ce:para id="p0040" view="all">The Application Hosting Environment <ce:cross-refs id="crfs0015" refid="bib0035 bib0040">[7,8]</ce:cross-refs> is a middleware layer designed to simplify the user's ability to exploit computational resources beyond the desktop, greatly facilitating the use of e-infrastructure. It has been deployed in support of a diverse set of projects, including HIV-1 protease modelling <ce:cross-ref id="crf0035" refid="bib0045">[9]</ce:cross-ref>, immune system simulation <ce:cross-ref id="crf0040" refid="bib0030">[6]</ce:cross-ref>, and large scale materials modelling <ce:cross-ref id="crf0045" refid="bib0050">[10]</ce:cross-ref>. AHE seeks to converge the Software as a Service model of cloud computing with high performance grid computing. In this paper we will discuss the concepts behind AHE, and describe in detail the latest version of the Application Hosting Environment, AHE 3.0, which has been reimplemented using RESTful services <ce:cross-ref id="crf0050" refid="bib0055">[11]</ce:cross-ref> rather than WSRF services <ce:cross-ref id="crf0055" refid="bib0060">[12]</ce:cross-ref>. We will demonstrate how the work we have done to redesign AHE 3.0 has led to a significant increase in performance compared to AHE 2.0 <ce:cross-ref id="crf0060" refid="bib0040">[8]</ce:cross-ref>, and we show how this new version of AHE is benefiting various ongoing research projects.</ce:para></ce:section><ce:section id="sec0010" view="all"><ce:label>2</ce:label><ce:section-title id="sect0025">Service oriented computational science</ce:section-title><ce:para id="p0045" view="all">Virtualization is a broad term used in computer science to describe the abstraction of resources. Application virtualization describes a range of technologies designed to separate an application from the operating system that it runs on. In many cases this is achieved by introducing compatibility layers around underlying operating system features and libraries, for example the WINE system used to run Windows applications on UNIX systems <ce:cross-ref id="crf0065" refid="bib0065">[13]</ce:cross-ref>.</ce:para><ce:para id="p0050" view="all">The key aim of virtualization is to abstract away all the details of an underlying hardware or software system from the concern of the user. The benefits are manifold: developers can code to a single virtualized interface or system rather than for a specific hardware implementation; multiple virtual instances of a system can often be run side by side on a single physical system (in machine virtualization for example); and physical resources can be protected.</ce:para><ce:para id="p0055" view="all">The growth of virtualization technologies, along with service oriented architectures (SOA), has also driven the development of cloud computing. The use of virtualized interfaces and systems means that the specific details of a cloud's architecture are hidden from consumers of the cloud resources. Several cloud computing models exist; the Infrastructure as a Service (IaaS) cloud paradigm typically takes the form of virtualized servers running on hardware platforms managed by the cloud hosting company, where each user is given access to one or more virtual servers, solely under their control. This also provides a degree of <ce:italic>elasticity</ce:italic>, as the number of virtual machines in a cloud environment can be greater than the number of physical servers available to the hosting entities. The Software as a Service (SaaS) cloud paradigm delivers access to applications centrally hosted on a cloud platform, typically via a web browser.</ce:para><ce:para id="p0060" view="all">While virtualization technologies certainly reduce the complexity of using a system, and especially when working across multiple heterogeneous computing environments, they are not widely deployed in high performance computing scenarios. As its name suggest, HPC seeks to obtain maximum performance from computing platforms. Extra software layers impact detrimentally on performance, meaning that in HPC scenarios users typically run the applications as close to the âbare metalâ as possible. In addition to the performance degradation introduced by virtualization technologies, choosing what details to abstract in a virtualized interface is itself very important. Grid and cloud computing support different interaction models. In grid computing, the user interacts with an individual resource (or sometimes a broker) in order to launch jobs into a queuing system. In cloud computing, users interact with a virtual server, in effect putting them in control of their own complete operating system. Both of these interaction models put the onus on the user to understand very specific details of the system that they are dealing with, making life difficult for the end user, typically a scientist who wants to progress his or her scientific investigations without any specific usability hurdles obstructing the pathway.</ce:para><ce:para id="p0065" view="all">To address these problems, we have developed a software layer designed to implement the Software as a Service cloud paradigm for scientific applications that rely on high performance computing, mediated by the <ce:italic>Application Interaction Model</ce:italic> which we describe in <ce:cross-ref id="crf0070" refid="sec0015">Section 3</ce:cross-ref>, derived from the user requirements also discussed in <ce:cross-ref id="crf0075" refid="sec0015">Section 3</ce:cross-ref>. This model is based on the insight that many e-infrastructures impose a steep learning curve on the majority of end users, who do not possess the technical expertise for the most part to compile, optimize, install, debug and finally launch their applications; they simply want to run their applications, obtain results and focus on their scientific endeavours. While an application may consist of a single execution of a computational code, it could also consist of a complex set of operations involving multiple codes, connected as a workflow; AHE enables all kinds of applications to be treated as simple âatomic" units, helping realize the original vision of a grid as âdistributed computing performed transparently across multiple administrative domains" <ce:cross-ref id="crf0080" refid="bib0070">[14]</ce:cross-ref>.</ce:para></ce:section><ce:section id="sec0015" view="all"><ce:label>3</ce:label><ce:section-title id="sect0030">User requirements</ce:section-title><ce:para id="p0070" view="all">For supercomputer class applications, the user generally has to install his/her own application, if that application is not one of the few community codes pre-installed on the machine; it is not possible simply to stage an executable to the target resource as it requires too much bespoke tailoring to the particular hardware setup of the resource. Generally a group of researchers will want to use the same application on a resource. However, many users will not know where a particular application is installed on a target system, nor will they necessarily know the best way to run the application on a particular system. Often, with supercomputer class systems, applications have to be run in specific ways to achieve the best performance. The community's expert users must spend time educating other users on the vagaries of different queuing systems and machines. Typically, the end user will need to stage data to the supercomputer before he/she is able to execute her application. Therefore, the supercomputer must provide accessible interfaces over which data can be staged. In order to launch an application, the users have to prepare a description of the job that they want to run, which is submitted to the queue management system on their target resource, in a format that the queue management system understands and which is potentially incompatible with other instances of the same queue management system running on other resources. Once the job has been submitted, users monitor the progress of their jobs through the queuing system, using interfaces provided by the resources.</ce:para><ce:para id="p0075" view="all">Distributed applications can consist of multiple computational codes launched on multiple resources, connected together as workflows of operations, as well as single codes launched on single resources. Applications can get their data from multiple sources, such as online data repositories and databases, and store their output data in similar resources. Typically, users will be given allocations of time on individual grid resources, or the e-infrastructure as a whole, through awards made to their project's principal investigator. These allocations will have a notional associated cost, the cost per CPU hour, derived by the resource operator from their running costs and a projected resource utilization. Such allocation models inhibit the most creative use of and ways of exploiting distributed e-infrastructure.</ce:para><ce:para id="p0080" view="all">The scientific end user's primary concern is running their application in a timely fashion, in order to obtain results that further their scientific objectives. All the services and facilities provided by a grid should be subservient to this end. Typically, the user does not even care which machine on the grid their application is run on, as long as results are delivered within a time frame that makes them useful, whether that is the time to publish a scientific paper, or the time to conduct a potentially life-saving medical simulation <ce:cross-ref id="crf0085" refid="bib0075">[15]</ce:cross-ref>.</ce:para><ce:para id="p0085" view="all">A further problem faced by end-users and administrators of computational e-infrastructures arises in connection with the usability of the security mechanisms usually deployed in these environments, in particular identity management. Many of the existing computational grid environments use Public Key Infrastructure (PKI) and X.509 digital certificates as a cornerstone for their security architecture. However, it is well documented that security solutions based on PKI lack user friendliness for both administrators and end-users, which is essential for the uptake of any grid security solution <ce:cross-refs id="crfs0020" refid="bib0080 bib0085">[16,17]</ce:cross-refs>. The problems stem from the process of acquiring X.509 digital certificates, which can be a lengthy one, and generating proxy certificates to get access to remote resources as part of the authentication process <ce:cross-ref id="crf0090" refid="bib0085">[17]</ce:cross-ref>. As a result, many users engage in practices which weaken the security of the environment, such as the sharing of the private key of a single personal certificate, to get on with their tasks.</ce:para><ce:para id="p0090" view="all">From many years of working with high-end computing applications, we have been able to derive a set of requirements for a system designed to make the use of distributed and HPC applications transparent to the end user. Current e-infrastructures focus on submitting jobs to batch schedulers on computational resources, meaning the user has to interact at both job and resource levels. Since usersâ predominant interest is running their application within a useful time frame, the first requirement of our usability model is that it should promote applications as a first class resource concept. <ce:italic>All user interactions should be with the application, rather than the machine, scheduler and job</ce:italic>.</ce:para><ce:para id="p0095" view="all">Current e-infrastructure job submission mechanisms put the onus on the user to manage and curate their application's output data. Our model preserves the full state of each instance of an application, including all parameters and data used to launch the application, and all simulation output. This assists with tracing the provenance of simulation results, and is key to simulation reproducibility. Current grid middleware tools require the user to perform a number of steps in order to launch their code. Our model reduces the number of steps required to the minimum number possible in order to successfully run an application.</ce:para><ce:para id="p0100" view="all">Current systems require the user to generate complicated job description documents in order to submit their application. Our model allows the user to launch their application using the simplest set of requirements possible, and takes care of generating whatever job descriptions the middleware on the underlying resource requires <ce:cross-ref id="crf0095" refid="bib0085">[17]</ce:cross-ref>. Users of supercomputer class resources may have access to a number of such resources via different computational grids, running different grid middleware stacks, requiring them to learn how to use different middleware tools to submit their jobs <ce:cross-ref id="crf0100" refid="bib0090">[18]</ce:cross-ref>. Our model presents a uniform interface to users to access resources running different middleware stacks, allowing them to transparently access not only single grids but also federated resources from multiple grids.</ce:para><ce:section id="sec0020" view="all"><ce:label>3.1</ce:label><ce:section-title id="sect0035">The Application Interaction Model</ce:section-title><ce:para id="p0105" view="all">Based on our user needs analysis we have derived the Application Interaction Model, designed to allow users to easily control virtualized applications running on remote e-infrastructures. Traditionally, HPC focuses on the concept of âjobsâ to describe distinct workloads submitted to a batch queue. We purposefully focus on the concept of <ce:italic>applications</ce:italic>. An application is a higher level concept than a job; although an application could be realized by a single HPC job, it could equally correspond to a coupled simulation, where two codes (launched as two HPC jobs) pass parameters between themselves, or a steered application which requires steering Web services to be initialized before the code is launched, or a workflow of arbitrary complexity. However the application is composed the user should still interact with a single entity to control the execution of all components of the application.</ce:para><ce:para id="p0110" view="all">We define the Application Interaction Model as follows:<ce:list id="list0005"><ce:list-item id="listitem0005"><ce:label>(i)</ce:label><ce:para id="p0115" view="all">The virtualized application is the central entity in the Application Interaction Model.</ce:para></ce:list-item><ce:list-item id="listitem0010"><ce:label>(ii)</ce:label><ce:para id="p0120" view="all">An application does not necessarily correspond to a single computational code â it could be composed of multiple computational codes linked together in a workflow, or a computational code and associated steering Web services. However, it is presented to the user as a single application.</ce:para></ce:list-item><ce:list-item id="listitem0015"><ce:label>(iii)</ce:label><ce:para id="p0125" view="all">The application encapsulates all of the details of how to launch it, such as where the binaries that constitute the application are located, how to interact with individual resources and so on. These details are shielded from the user, who does not need to know anything about the underlying details.</ce:para></ce:list-item><ce:list-item id="listitem0020"><ce:label>(iv)</ce:label><ce:para id="p0130" view="all">Each instance of an application is controlled by a separate application instance, through which it is controlled. The application instance encapsulates all of the state associated with that run of the application, such as the input and output data, the application parameters and so on.</ce:para></ce:list-item><ce:list-item id="listitem0025"><ce:label>(v)</ce:label><ce:para id="p0135" view="all">All user interaction occurs through the virtualized application instance, which causes the computational code(s) that constitute the application to be launched on back-end computational resources.</ce:para></ce:list-item><ce:list-item id="listitem0030"><ce:label>(vi)</ce:label><ce:para id="p0140" view="all">Operations on the application instance allow the user to stage data associated with the application to the resource where it is needed, launch, monitor and terminate the application. These operations have an effect on the codes running on remote grid resources.</ce:para></ce:list-item></ce:list></ce:para><ce:para id="p0145" view="all">A schematic representation of this interaction model is shown in <ce:cross-ref id="crf0105" refid="fig0005">Fig. 1</ce:cross-ref><ce:float-anchor refid="fig0005"/>. The principal motivation behind this approach is to simplify the use of e-infrastructures, by introducing an abstraction layer between the users and the high end computing resources available to them which hides the complexity of the latter, providing an abstract interface to scientific applications deployed on a grid. This abstraction layer takes care of the process of launching the application on one or more HPC resources, and reduces the interaction with an application to those operations most relevant to the user.</ce:para><ce:para id="p0150" view="all">The Application Interaction Model implies that the task of deploying and configuring an application is taken care of by a system administrator, or a community's âexpert userâ. This draws a parallel with many different communities that use applications on high performance computing resources, such as the UK Collaborative Computational Projects (CCPs) <ce:cross-ref id="crf0110" refid="bib0095">[19]</ce:cross-ref>, where a group of programmers develop a code, which they then distribute to an end user community. Once the expert user has configured AHE to share an application, end users can invoke clients installed on their workstation, tablet or mobile phone to launch and monitor the application across a variety of geographically distributed computational resources.</ce:para></ce:section></ce:section><ce:section id="sec0025" view="all"><ce:label>4</ce:label><ce:section-title id="sect0040">The Application Hosting Environment</ce:section-title><ce:para id="p0155" view="all">The Application Hosting Environment (AHE) is our implementation of the Application Interaction Model. AHE is based on two key concepts to promote usability: application virtualization and community application sharing. Application virtualization allows developers to code against a single virtualized interface instead of the specific underlying software or hardware system, and it also allows multiple virtualized instances to be run side by side on a single physical system. The concept of an application in AHE does not necessarily imply a single computational code executed on a single HPC resource. A virtualized application in AHE can be comprised of more complex workflows, such as coupled simulations where multiple applications are required to pass data to each other, for example coupled quantum and molecular level simulations, made up of separate codes that exchange data via files <ce:cross-ref id="crf0115" refid="bib0100">[20]</ce:cross-ref>.</ce:para><ce:para id="p0160" view="all">AHE is built around the idea of a community model. In this paradigm, an expert user is required to set up and configure AHE with details of a scientific application, the distributed (grid) infrastructure it is deployed on and then uses AHE's RESTful interface to share this scientific application transparently with a group of end users. The resources that a particular application is deployed onto are chosen based on the characteristics and requirements of the application. An end user can then launch and monitor applications through the AHE desktop GUI client, web client or command line client (described in <ce:cross-ref id="crf0120" refid="sec0075">Section 4.2</ce:cross-ref>), and any combination of these clients can be used simultaneously. AHE has gone through several software releases, principally AHE 1.0 <ce:cross-ref id="crf0125" refid="bib0035">[7]</ce:cross-ref> and AHE 2.0 <ce:cross-ref id="crf0130" refid="bib0040">[8]</ce:cross-ref>. AHE 3.0, which we describe in this paper, adds many significant new features to those found in AHE 2.0, with an unremitting focus on usability and reliability.</ce:para><ce:section id="sec0030" view="all"><ce:label>4.1</ce:label><ce:section-title id="sect0045">The architecture of AHE 3.0</ce:section-title><ce:para id="p0165" view="all">AHE 3.0 is a complete re-implementation of AHE 2.0 in Java (AHE 2.0 and earlier versions were implemented in Perl). AHE 3.0 introduces a new workflow engine based on JBPM <ce:cross-ref id="crf0135" refid="bib0105">[21]</ce:cross-ref> allowing complex workflows to be created and integrated into AHE, and accessed by users as single applications. AHE 3.0 also incorporates an object relational mapping framework using Hibernate <ce:cross-ref id="crf0140" refid="bib0110">[22]</ce:cross-ref>, which simplifies installation and development of AHE by decoupling AHE from the database used to maintain state. A RESTful web service interface based on the Restlet <ce:cross-ref id="crf0145" refid="bib0115">[23]</ce:cross-ref> library furnishes a simple and concise HTTP based interface for clients to access AHE services, compared to the WSRF <ce:cross-ref id="crf0150" refid="bib0060">[12]</ce:cross-ref> based services used in AHE 2.0.</ce:para><ce:para id="p0170" view="all">AHE 3.0 is a departure from AHE 2.0 and earlier releases, having undergone a complete redesign. AHE 3.0 comprises a number of modules which implement the core functionality. AHE runtime controls the start-up and shut-down of the AHE application life cycle; AHE engine implements the core functionalities including the workflow engine as well as facilitating interactions between the different components; AHE connector module implements the functionality required to connect to different types of middleware; AHE security module handles the security component as well as user management of AHE application and grid middleware; AHE interface module provides a RESTful Web service interface as well as command line access to AHE; the file module provides mechanisms to transfer files between different storage resources using GridFTP. A schematic showing the interaction of these different components is presented in <ce:cross-ref id="crf0155" refid="fig0010">Fig. 2</ce:cross-ref><ce:float-anchor refid="fig0010"/>.</ce:para><ce:para id="p0175" view="all">RESTful Web service provides a simple abstraction of AHE's functionalities to the user by exposing AHE components as resources, each of which is identified by a global identifier (URI). This provides a clean and simple mechanism for end users to access AHE, making client tooling less complicated; it also means that AHE 3.0 can either be deployed via a servlet container such as Tomcat, or as a standalone server. A detailed discussion of the AHE 3.0 server components is presented below.</ce:para><ce:section id="sec0035" view="all"><ce:label>4.1.1</ce:label><ce:section-title id="sect0050">AHE runtime module</ce:section-title><ce:para id="p0180" view="all">The AHE runtime module is responsible for starting up and shutting down the server in the standalone mode. It also initializes all the components and user configurations as well as the basic registry information relating to users. In standalone mode, AHE uses an embedded Jetty Server to provide web server functionality, including HTTPS with mutual user certificate authentication. In this mode, AHE 3.0 can be started from an executable file. AHE can also be deployed as a Java servlet into a servlet compliant server such as Apache Tomcat <ce:cross-ref id="crf0160" refid="bib0120">[24]</ce:cross-ref>. AHE can be deployed with an embedded H2 database <ce:cross-ref id="crf0165" refid="bib0110">[22]</ce:cross-ref> or use an external database through the Hibernate framework. More details about the deployment are discussed in <ce:cross-ref id="crf0170" refid="sec0095">Section 6</ce:cross-ref>.</ce:para></ce:section><ce:section id="sec0040" view="all"><ce:label>4.1.2</ce:label><ce:section-title id="sect0055">AHE engine module</ce:section-title><ce:para id="p0185" view="all">The AHE engine module encapsulates the functionality through which AHE 3.0 virtualizes access to scientific applications. It provides methods to create an Application Instance object, used to represent an instance of a virtualized application. In addition, methods are provided to run and maintain the execution workflow for each virtualized application instance. The workflow describes how the data and computational code(s) associated with this application instance are processed, including details such as the back-end connector (cf. <ce:cross-ref id="crf0175" refid="sec0045">Section 4.1.3</ce:cross-ref>) and security mechanism to use.</ce:para><ce:para id="p0190" view="all">The AHE engine module also allows higher level workflows to be implemented. These workflows can control multiple application instances to create parameter sweep applications or complex chained application scenarios, in which data created by an application is used as the input for a second one and so on.</ce:para></ce:section><ce:section id="sec0045" view="all"><ce:label>4.1.3</ce:label><ce:section-title id="sect0060">AHE connector module</ce:section-title><ce:para id="p0195" view="all">The connector modules provide a set of classes that invoke external Java libraries which allow AHE to act as a client to distributed resource managers (DRMs) such as Globus GRAM. The connector module provides a generic Java interface (using the adapter pattern) which adapters for different DRMs have to implement. This Java interface is used by AHE 3.0 to access external computational resources, providing a loosely-coupled relationship between AHE and external client libraries. Connectors currently exist to allow AHE 3.0 to run applications via Globus 5.0 <ce:cross-ref id="crf0180" refid="bib0125">[25]</ce:cross-ref>, Unicore 6 <ce:cross-ref id="crf0185" refid="bib0130">[26]</ce:cross-ref> and QCG OGSA-BES <ce:cross-ref id="crf0190" refid="bib0135">[27]</ce:cross-ref>. Each connector implementation translates the AHE's internal application state model into specific directives to the relevant DRM, such as the number of cores to use. The extensible interface framework means that interfaces to other DRM systems can easily be added as necessary. Each connector module is responsible for trapping errors from the underlying DRM and mapping it to an AHE error state, which is presented to the user.</ce:para></ce:section><ce:section id="sec0050" view="all"><ce:label>4.1.4</ce:label><ce:section-title id="sect0065">AHE interface module</ce:section-title><ce:para id="p0200" view="all">This module contains library code used to interface with AHE 3.0. This includes a bridge between the RESTful Web service interface (cf. <ce:cross-ref id="crf0195" refid="sec0065">Section 4.1.7</ce:cross-ref>) and the AHE runtime module (cf. <ce:cross-ref id="crf0200" refid="sec0035">Section 4.1.1</ce:cross-ref>). The AHE REST Web services exposes the main AHE functionalities and components as resources which can be controlled by performing operations on those resources.</ce:para></ce:section><ce:section id="sec0055" view="all"><ce:label>4.1.5</ce:label><ce:section-title id="sect0070">AHE security module</ce:section-title><ce:para id="p0205" view="all">The AHE security module provides a number of important functions, including user management, authorization and authentication control, platform credential management and integration with Audited Credential Delegation <ce:cross-ref id="crf0205" refid="bib0140">[28]</ce:cross-ref> (see <ce:cross-ref id="crf0210" refid="sec0085">Section 5</ce:cross-ref>). AHE provides a mechanism to delegate security control to ACD; these security functions include user authentication and management as well as virtual organization support and proxy generation for any specified virtual organization. In ACD mode, AHE contacts ACD using RESTful Web service calls to authenticate users as well as to request the generation of proxy credentials on a per user basis. AHE itself is also able to authenticate users via SSL certificates or the more standard username/password credential combination. The security module is able to perform command level authorization, as well as platform credential management such as maintaining private key and certificate information for a user which may be required for him/her to be granted access to particular computational resources and data. Additionally, the security module is able to request updated proxies from a MyProxy server when a certificate is about to expire.</ce:para></ce:section><ce:section id="sec0060" view="all"><ce:label>4.1.6</ce:label><ce:section-title id="sect0075">AHE transfer module</ce:section-title><ce:para id="p0210" view="all">In AHE, input data is transferred directly from a location specified by the user to the computational resources where an application is to be run. Once a job is completed, the AHE server takes care of staging any output data back to the user specified location. The AHE Transfer module provides a mechanism to set up the security credential used to authenticate transfers and then initiate transfers between two different storage components through the AHE Java file transfer interface. Different transfer mechanisms have been implemented using this Java interface. Currently, file transfer functionalities make use of the jGlobus and UCC libraries to stage data using the GridFTP <ce:cross-ref id="crf0215" refid="bib0145">[29]</ce:cross-ref> and Unicore transfer protocols. The Java interface makes it easy to add new transfer protocols in future should they become necessary.</ce:para></ce:section><ce:section id="sec0065" view="all"><ce:label>4.1.7</ce:label><ce:section-title id="sect0080">RESTful web service</ce:section-title><ce:para id="p0215" view="all">One of the main features of AHE 3.0 is the implementation of the RESTful Web services interface, which replaces the WSRF interface used in AHE 2.0 and earlier versions. RESTful Web services expose resources addressable via HTTP and operated on using HTTP operations such as POST and GET. This provides a secure and straightforward universal end point for AHE to provide services to users. AHE 3.0 uses the Java Restlet library for its RESTful implementation <ce:cross-ref id="crf0220" refid="bib0115">[23]</ce:cross-ref>. The Restlet library was chosen to underpin the AHE 3.0 server due to the many features it provides, including the ability to develop services that run as standalone services or which can be deployed in a servlet container such as Tomcat (using either the J2SE or the J2EE version of the library), multiple native data representation formats such as XML and JSON, and scalability as well as security support.</ce:para><ce:para id="p0220" view="all">The AHE REST command structure is grouped into a number of resources including: User, AppInstance, AppReg (application registry), Resource, PlatformCredential and Cmd (general commands). Each of these resources can be viewed or modified using the GET, POST or DELETE HTTP operations when applied to a suitable AHE resource URI. A typical AHE URI consists of several components; the domain URI followed by the user identifier and the AHE resource that will be operated on. The URI is followed by the command and argument if required.</ce:para></ce:section><ce:section id="sec0070" view="all"><ce:label>4.1.8</ce:label><ce:section-title id="sect0085">AHE workflow engine</ce:section-title><ce:para id="p0225" view="all">A key component of AHE 3.0 is the workflow management system built on the JBPM framework. JBPM is a lightweight Java workflow engine, with workflows described using the Business Process Modelling Notation (BPMN) 2.0 specification which calls specific Java classes, scripts or Drool rules to perform arbitrary functions. This allows new complex workflows and scripting functionalities to be introduced quickly to extend AHE. JBPM supports workflow persistence using the Hibernate framework meaning that, in the event of a server crash, the workflow can be recovered quickly and seamlessly. There is also a wide range of tools available to plug in to the JBPM framework, including workflow editors, which eases the integration of JBPM with AHE.</ce:para><ce:para id="p0230" view="all">By using a workflow engine, further functionalities and workflows can be introduced into AHE applications. This allows the expert user to tailor customized workflows to complex tasks, such as coupled model applications. It also allows additional features or functionalities to be added, such as fault tolerance, and to integrate AHE with external services such as SPRUCE <ce:cross-ref id="crf0225" refid="bib0150">[30]</ce:cross-ref> in order to submit urgent computing jobs, and RealityGrid Steering <ce:cross-ref id="crf0230" refid="bib0155">[31]</ce:cross-ref> which allows scientists to interact with running applications.</ce:para></ce:section></ce:section><ce:section id="sec0075" view="all"><ce:label>4.2</ce:label><ce:section-title id="sect0090">AHE client</ce:section-title><ce:para id="p0235" view="all">The AHE server maintains all state information about a particular application instance. This means that client tools need to store no information about individual application runs, and consequently very simple clients containing little configuration data can be created. It also means that clients can interoperate, with one client used to launch an application and another used to monitor it for example.</ce:para><ce:para id="p0240" view="all">The simple REST endpoints exposed by AHE 3.0 server mean that in practice any tool which can perform HTTP POST and GET operations (such as the <ce:small-caps>UNIX</ce:small-caps> <ce:monospace>curl</ce:monospace> command) can be used as clients. However, a Java client API has been developed which not only provides methods to call AHE 3.0 server commands, but also provides auxiliary functions such as data staging. This API has been used to produce both graphical and command line clients. It also allows applications hosted in AHE to be accessed from high level tools, and integrated with workflow engines such as GridSpace and Taverna (see <ce:cross-ref id="crf0235" refid="sec0110">Section 8</ce:cross-ref>).</ce:para><ce:para id="p0245" view="all">In addition, an AHE web client has been developed to provide a simple interface for the end user when interacting with the AHE server via a web browser. The web client interface has been developed using the Google Web Toolkit (GWT) and communicates with the AHE 3.0 server through its RESTful interface. The web client can be deployed on Java servlet compliant servers such as Tomcat or JBoss AS. The web client also allows the user to administer and configure an AHE 3.0 server, providing capabilities to manage users, certificates, applications, target computational resources and the server itself. The web client also allows end users to transfer files, launch and monitor AHE jobs through a web browser.</ce:para></ce:section><ce:section id="sec0080" view="all"><ce:label>4.3</ce:label><ce:section-title id="sect0095">AHE application life cycle</ce:section-title><ce:para id="p0250" view="all">AHE manages the whole life cycle of an application when invoking AHE, from input data staging, through job execution, to output data staging; during this process the application transitions through a number of different states. This life cycle is shown in <ce:cross-ref id="crf0240" refid="fig0015">Fig. 3</ce:cross-ref><ce:float-anchor refid="fig0015"/>.</ce:para><ce:para id="p0255" view="all">The process starts when a prepare command is received by AHE. This puts AHE in a waiting mode, allowing the user to set up additional configuration details required for the application or workflow submission. Once a start command has been submitted, AHE server proceeds to first stage any input data that the user has attached to the application instance; once that is completed, it is then submitted to the execution platform. Once the application has been submitted to an external execution platform, AHE goes into a polling state, checking regularly for the completion of the application. When the job has completed, any output data is staged to the location specified by the user and the job submission process comes to an end.</ce:para><ce:para id="p0260" view="all">If errors occur during certain stages of the AHE workflow process, AHE captures the error and allows the user to fix this error and attempt to execute the same step again. This workflow is modelled and executed using the JBoss jBPM workflow library and additional components can be added to the workflow if necessary.</ce:para><ce:para id="p0265" view="all">In practice, a user has to go through the following steps in order to run an application:<ce:list id="list0010"><ce:list-item id="listitem0035"><ce:label>(i)</ce:label><ce:para id="p0270" view="all">AHE runtime initializes all components, populates the internal data structures and ensures that the data held in the state database is synchronized with the AHE data structures.</ce:para></ce:list-item><ce:list-item id="listitem0040"><ce:label>(ii)</ce:label><ce:para id="p0275" view="all">The user queries the application registry to see what applications are available.</ce:para></ce:list-item><ce:list-item id="listitem0045"><ce:label>(iii)</ce:label><ce:para id="p0280" view="all">The Prepare command is issued which tells AHE Engine to create a persistent App-Instance Object that keeps track of the status and state of an executing application, which in turn initiates the AHE workflow process. An App-Instance object is a representation of a virtualized application initiated by the user. This allows AHE to keep track of the state and progress of the virtualized application.</ce:para></ce:list-item><ce:list-item id="listitem0050"><ce:label>(iv)</ce:label><ce:para id="p0285" view="all">This App-Instance object is persistent and stored in a local database using the Hibernate Framework, which allows AHE server to be database agnostic. In particular:<ce:list id="list0015"><ce:list-item id="listitem0080"><ce:label>(a)</ce:label><ce:para id="p0290" view="all">the App-Instance object is associated with a user/group and has a unique identifier;</ce:para></ce:list-item><ce:list-item id="listitem0085"><ce:label>(b)</ce:label><ce:para id="p0295" view="all">active App-Instance data/objects are held in a registry and checked by AHE Engine to see which processes can be operated on each App-Instance, such as when and how they can be run, when data can be checked or retrieved, and so on.</ce:para></ce:list-item></ce:list></ce:para></ce:list-item><ce:list-item id="listitem0055"><ce:label>(v)</ce:label><ce:para id="p0300" view="all">Input data files required by the application are staged to the target resource. AHE Server records the location and transfer protocol specified for each individual data file and passes that information to the relevant connector module so the job manager knows how to stage the data and retrieve the results if necessary.</ce:para></ce:list-item><ce:list-item id="listitem0060"><ce:label>(vi)</ce:label><ce:para id="p0305" view="all">The user next issues the submit command.</ce:para></ce:list-item><ce:list-item id="listitem0065"><ce:label>(vii)</ce:label><ce:para id="p0310" view="all">AHE workflow module then schedules the execution of the application using JBPM and quartz scheduler <ce:cross-ref id="crf0245" refid="bib0160">[32]</ce:cross-ref>. This allows complex workflows to include asynchronous tasks, as well as multi-thread/concurrency support.</ce:para></ce:list-item><ce:list-item id="listitem0070"><ce:label>(viii)</ce:label><ce:para id="p0315" view="all">AHE Engine deals with the security interface requirements and submits tasks to external execution platforms. AHE polls the external execution platform (if it is configured to do so) and retrieves any output data once the application is completed. JBPM allows additional features to be added in order to create more complex workflows incorporating AHE plug-in components. JBPM is persistent so that all events are logged. If the server crashes, the workflow state stored in a database can be retrieved and reinitialized.</ce:para></ce:list-item><ce:list-item id="listitem0075"><ce:label>(ix)</ce:label><ce:para id="p0320" view="all">Once the application has completed, the data is retrieved and sent to the scratch disc (temporary file storage) or copied to an external storage resource specified by the user, allowing him/her to access it.</ce:para></ce:list-item></ce:list></ce:para></ce:section></ce:section><ce:section id="sec0085" view="all"><ce:label>5</ce:label><ce:section-title id="sect0100">Securing AHE 3.0 with audited credential delegation</ce:section-title><ce:para id="p0325" view="all">Efforts to address the usability of e-infrastructures are hampered by existing security mechanisms imposed on users. Typically, these require a user to obtain one or more digital certificates from a certificate authority, as well as to maintain and renew these certificates as necessary. The difficulty in doing this leads to widespread certificate sharing and misuse and a substantial reduction in the number of potential users <ce:cross-ref id="crf0250" refid="bib0080">[16]</ce:cross-ref>. In order to remove this barrier, we have coupled AHE 3.0 to Audited Credential Delegation (ACD) <ce:cross-ref id="crf0255" refid="bib0140">[28]</ce:cross-ref>. ACD is a usable security system that accommodates the security requirements of both end-users and resource providers, offering facilities to authenticate, authorize and audit all transactions.</ce:para><ce:para id="p0330" view="all">The main advantage of ACD is that it entirely removes the use of digital certificates from end-usersâ experience, minimizing the usability problems caused by such credentials while addressing resource providersâ concerns regarding securing access to their shared resources, tracing the users responsible for performing specific tasks on their resources. ACD enables users to invoke security credentials they are familiar with such as their institutional username/password combination (using Shibboleth <ce:cross-ref id="crf0260" refid="bib0165">[33]</ce:cross-ref>, for example); assuming that they are authenticated it issues a digital certificate to them when necessary in the background.</ce:para><ce:para id="p0335" view="all">ACD can be used to set up multiple virtual organizations (VO) to manage dynamic groups of users wishing to access e-infrastructure based resources, and to provide VO administrators with tighter control of usersâ actions as well as identity management. Existing solutions such as MyProxy <ce:cross-ref id="crf0265" refid="bib0170">[34]</ce:cross-ref>, Shibboleth, and SARoNGS <ce:cross-ref id="crf0270" refid="bib0175">[35]</ce:cross-ref> on their own only provide credential repositories to store short lived X.509 certificates (MyProxy), web based single sign-on (Shibboleth), and web portals to access grid resources using a combination of Shibboleth and VOMS <ce:cross-ref id="crf0275" refid="bib0180">[36]</ce:cross-ref> (SARoNGS). None provides a holistic VO controlled security solution in the way ACD does.</ce:para><ce:para id="p0340" view="all">The design of ACD is based on the concept of wrappers. A wrapper is a connector between a component and the outside world. It enables controlled access to the functionalities of a component. The ACD security wrapper comprises authentication, authorization and auditing components. Any request by a user to perform an operation using a service secured by ACD is intercepted by the security wrapper to establish the identity of the requester, to check whether or not the user is allowed to perform the task, to record the results of these checks in an audit log, then to perform the task in the distributed environment and, finally, to return results to the user. ACD has been developed in Java and exposes a RESTful interface. This allows its integration with any tool developed in a programming language that is capable of accessing RESTful services. Prior to its implementation, a model of ACD was developed based on formal notation <ce:cross-ref id="crf0280" refid="bib0185">[37]</ce:cross-ref>, which is used for building safety critical systems, using the recommendations of the Open Web Application Security consortium for developing secure software <ce:cross-ref id="crf0285" refid="bib0190">[38]</ce:cross-ref>. This provides rigorous validation of ACD's security features.</ce:para><ce:para id="p0345" view="all">The principal features of ACD's architecture are described below.<ce:list id="list0025"><ce:list-item id="listitem0110"><ce:label>â¢</ce:label><ce:para id="p0350" view="all"><ce:italic>Local authentication service</ce:italic>. The current implementation supports a username-password database specifically for non Shibboleth ACD support. To be authenticated, a user has to provide a username/password pair that matches an entry in the database or use their local institution credentials via Shibboleth. To avoid known vulnerabilities involving usernames and passwords we adopted OWASP best security practices <ce:cross-ref id="crf0290" refid="bib0195">[39]</ce:cross-ref> such as storing passwords in encrypted form, rejecting weak passwords chosen by users, forcing the password length to be a minimum of eight characters including special characters, and changing the password on a regular basis. The Shibboleth support in the latest version of ACD provides users with more familiar authentication mechanisms. Shibboleth is currently used by many universities in the UK, EU and beyond to allow students and researchers to access online publishersâ resources by invoking their local institutional username/password credentials.</ce:para></ce:list-item><ce:list-item id="listitem0115"><ce:label>â¢</ce:label><ce:para id="p0355" view="all"><ce:italic>Authorization component</ce:italic>. This component controls all actions performed in the VO. It uses the Parametrized Role Based Access Control (PRBAC) model in which permissions are assigned to roles <ce:cross-ref id="crf0295" refid="bib0200">[40]</ce:cross-ref>. The VO policy designer associates each user in the VO with the role that best describes his/her job function. The policy is defined at VO set up because it depends on the VO functionalities. The tasks (permissions) assigned to roles are drawn from the VO functionality.</ce:para></ce:list-item><ce:list-item id="listitem0120"><ce:label>â¢</ce:label><ce:para id="p0360" view="all"><ce:italic>Credential repository</ce:italic>. This component is responsible for managing the delegation of identity from the user to ACD via a proxy certificate. It stores the certificates acquired by the VO administrator (known as robot certificates) and their corresponding private keys in order to communicate with the target e-infrastructure. To allow the members of a VO access to computational resources, the VO is assigned a digital certificate, which is used behind the scenes to authenticate requests issued by the VO at the resource provider site. The component also maintains a list of issued proxy certificates (delegated identities), their corresponding private keys and the association between users and proxies in order to trace which proxy was used by which user.</ce:para></ce:list-item><ce:list-item id="listitem0125"><ce:label>â¢</ce:label><ce:para id="p0365" view="all"><ce:italic>Auditing component</ce:italic>. This component records all actions within the VO, including authorized and unauthorized requests to perform tasks within the VO, the username that requested them, the number of login attempts and login times. This allows the VO management to identify those ACD users responsible for having performed any tasks within an e-infrastructure environment.</ce:para></ce:list-item></ce:list></ce:para><ce:section id="sec0090" view="all"><ce:label>5.1</ce:label><ce:section-title id="sect0105">Integration with the Application Hosting Environment</ce:section-title><ce:para id="p0370" view="all">When run without ACD, the AHE security model requires each individual user to have a digital certificate, which carries with it the need to go through a lengthy credential acquisition process. To remove the need for such a certificate, we have integrated ACD with AHE. The first step of the integration requires understanding the interaction between AHE and ACD, in other words the functional and administrative tasks that can be performed within the integrated system. The administrative tasks offered by ACD include VO creation, certificate assignment, adding users, resetting user passwords, creating user roles, assigning tasks to roles, and assigning users to roles. The functional tasks offered by AHE include: Prepare Job, Submit Job, Monitor Job, download and Terminate Job. AHE's functional tasks are the same as the tasks permitted for any authorized user on a computational resource that uses the Globus or UNICORE middleware, for example. Therefore, the permissions assignment to the VO is done by the resource owner first, then the VO administrator re-assigns these permissions to the roles in the VO according to the VO authorization requirements.</ce:para><ce:para id="p0375" view="all">In the integrated ACD<ce:hsp sp="0.25"/>+<ce:hsp sp="0.25"/>AHE environment, the authorization requirements determined by the VO administrator are expressed through the introduction of two roles: VO Administrator and Scientist. The former is permitted to perform all the administrative operations above in addition to terminate, monitor and download any job submitted to a resource. The latter is permitted to perform all AHE operations in such a way that a person who submitted a specified job can only perform AHE functional operations on this application. As a result, two users running applications invoking different data will not be able to view the results of each other's activities. In addition, the scientist's role only permits a user to change his/her own password.</ce:para><ce:para id="p0380" view="all">The construction of a VO requires that a system administrator goes through the process of acquiring a digital certificate. Once done, the VO administrator creates a VO and assigns the certificate to the named VO using the ACD client. It then becomes possible to add users instantly to the VO and give them genuinely transparent access to e-infrastructure resources. To illustrate how this system works, consider a user named âJohn Smith" who is a member of a research group in a UK university and would like to use UK National e-Infrastructure Service (NES) <ce:cross-ref id="crf0300" refid="bib0205">[41]</ce:cross-ref> resources to run scientific applications using AHE. The user contacts the local VO administrator and requests to join a specific VO. The user can opt to use their local username and password, if their institution is part of the Shibboleth Federation, or requests the creation of a dedicated ACD account. The VO administrator assigns the user to the âScientist" role described above and assigns the user to a VO that has an access to e-infrastructure resources. The communications between the AHE<ce:hsp sp="0.25"/>+<ce:hsp sp="0.25"/>ACD client and the wrapped AHE server, as well as between the latter and the grid resources, are protected by the SSL security protocol.</ce:para><ce:para id="p0385" view="all">In order to launch an application on a computational resource, the user invokes a request to perform the âSubmit Job" task using an AHE client with ACD extension. This request is intercepted by the ACD authentication component that checks if the username and password match an entry in the database or can be authenticated against Shibboleth. The result of the authentication is recorded in the auditing component. The role of the user is picked up from the authorization component, in this case âScientist". The authorization checks whether the âSubmit Job" operation is permitted for the âScientist" role held by the user. The result of the access control check is recorded in the audit log, and the operation âSubmit Job" is invoked on AHE server. Once the request is granted, ACD picks the certificate associated with the VO the user wants to use and checks whether the user is assigned to this VO. If the check is successful ACD generates a proxy certificate from the VO assigned certificate, uploads it to a MyProxy server and records the issued proxies in the credential repository.</ce:para><ce:para id="p0390" view="all">ACD then sends the randomly generated username/password pair needed to access MyProxy to the AHE server to download the session proxy. Finally, the AHE server sends the request to the computational resource site along with the proxy. At the target site, the proxy is validated. Certificate authentication succeeds, and the distinguished name on the proxy (VOName) is checked against the resource's authorization system to determine the role of the VOName, which is Scientist. Since this role is allowed to submit an application to resources the task will be invoked. From the e-infrastructure's perspective, it is the VOName that submitted the task, not âJohn Smith". In order to find out who invoked the âsubmit job" task on the resource using a specific proxy, the resource administrator passes the public key of the proxy to the VO administrator who can identify the name of the user.</ce:para><ce:para id="p0395" view="all">In this way, requests from within the combined ACD/AHE system can be audited. It is thus possible to identify legitimate users and to ensure that only such users are allowed access to resources, in conformance with the policies enforced by the e-infrastructure management. In addition, it is possible to detect unauthorized attempts to access resources from within the VO and to identify persons responsible for such attempts. This form of accountability is an essential requirement for resource providers to be prepared to accept the ACD security model.</ce:para></ce:section></ce:section><ce:section id="sec0095" view="all"><ce:label>6</ce:label><ce:section-title id="sect0110">Deployment of AHE 3.0</ce:section-title><ce:para id="p0400" view="all">AHE can be deployed as a standalone application via the Jetty Server using an embedded database or, in a more complex environment, AHE can be deployed as a Servlet hosted within a Servlet compliant server such as Apache Tomcat and configured to use databases supported by the Hibernate framework.</ce:para><ce:para id="p0405" view="all">In the simplest configuration, the standalone mode allows AHE to be executed as an application which launches the Jetty Server with the option of invoking an embedded database or any external database supported by the Hibernate Framework. In this configuration, the user simply downloads the AHE executable, configures the Hibernate configuration file to set up the database connectivity and runs the programme.</ce:para><ce:para id="p0410" view="all">With server or network constraints, AHE can be hosted inside a Servlet compliant server such as Apache Tomcat and be configured to use any databases supported by the Hibernate framework. A user should then download the AHE servlet version, deploy it on the Servlet server and configure the database configuration file to ensure AHE runs correctly. Once AHE is running, the system administrator configures user management, hosted applications as well as resources and credentials.</ce:para><ce:para id="p0415" view="all">Whichever way the server is deployed, end users can access it either using a web browser, via the web client interface, or using the GUI or command line client tools. The client tools simply require Java to be available on the client machine; after setting an environment variable and running a configuration script these can be easily run.</ce:para></ce:section><ce:section id="sec0100" view="all"><ce:label>7</ce:label><ce:section-title id="sect0115">AHE 3.0: comparison with AHE 2.0</ce:section-title><ce:para id="p0420" view="all">Our efforts to refactor AHE 3 to expose a restful interface, as well as redesign the AHE server in version 3.0 have not only been done to enhance user experience, but also to improve performance. In order to evaluate the benefits of this work, we ran performance tests comparing the performance of AHE 2.0 against AHE 3.0.</ce:para><ce:para id="p0425" view="all">Our experimental set up consisted of a server running both AHE 2.0 and AHE 3.0, with both systems configured to launch applications via the QCG-Computing middleware onto a 96 node cluster within the Centre for Computational Science at UCL. The tests we performed used a workstation to submit batches of applications to AHE 2.0 and AHE 3.0 in turn, measuring the time taken to submit these batches. The application launched was a simple code designed to sort a list of words into alphabetical order, but since we are only interested in the time performance of the AHE server itself, we only measured time taken to submit the application rather than measuring the time the application takes to execute (which would be affected by the cluster load), and the cluster was dedicated to the experiment while the tests were performed. The tests themselves were implemented as JUnit tests calling the AHE client API, while JUnit, executed via the Eclipse development platform, was used to measure the time taken to perform the tests. Each test was repeated three times, and the mean time taken for each test calculated. The results are plotted in <ce:cross-ref id="crf0305" refid="fig0020">Fig. 4</ce:cross-ref><ce:float-anchor refid="fig0020"/>, with error bars showing the standard deviation of each result.</ce:para><ce:para id="p0430" view="all">As <ce:cross-ref id="crf0310" refid="fig0020">Fig. 4</ce:cross-ref> shows, AHE 3.0 performs far faster than AHE 2.0, and the time taken to submit jobs using AHE 2.0 is much more variable, meaning that it is less reliable from a user perspective. This is due to the fact that AHE 3.0 is developed in Java whereas AHE 2.0 was developed with Perl/WSRF::Lite; AHE 3.0 exploits a simple RESTful interface, whereas AHE 2.0 uses the far more complicated WSRF extension to Web services, which increases the complexity of both client and server. Application submission is also faster in AHE 3.0 because the system implements a buffered queuing system between the AHE server and the connector modules, which has the effect of allowing the submission interface to process more simultaneous requests, compared to AHE 2.0. In order for us to better investigate the nature of the performance differences between AHE 2.0 and AHE 3.0, in future work we plan to instrument the server code of both AHE versions with timing routines, and then perform a set of experiments to determine the performance of different parts of the applications launching process, from data staging to job submission.</ce:para><ce:section id="sec0105" view="all"><ce:label>7.1</ce:label><ce:section-title id="sect0120">Evaluation of the Application Interaction Model</ce:section-title><ce:para id="p0435" view="all">To validate our hypothesis that the Application Interaction Model, by simplifying the process of launching applications on high performance computing resources, is more usable than the traditional grid interaction model, we conducted a rigorous usability study. We have reported this study fully in Zasada et al. <ce:cross-ref id="crf0315" refid="bib0085">[17]</ce:cross-ref>, and for a comprehensive account of the study methodology we refer readers to that publication.</ce:para><ce:para id="p0440" view="all">We compared the AHE command line client with the Globus command line client and the AHE graphical client with the Unicore graphical client. By all of our measurements, the AHE clients were judged to be significantly more usable than either Globus or Unicore <ce:cross-ref id="crf0320" refid="bib0085">[17]</ce:cross-ref>.</ce:para><ce:para id="p0445" view="all">In addition to the usability tests comparing AHE with common middleware tools, we also compared the standard AHE release with the new version of AHE, integrated with the security solution Audited Credential Delegation <ce:cross-ref id="crf0325" refid="bib0185">[37]</ce:cross-ref> (discussed in <ce:cross-ref id="crf0330" refid="sec0085">Section 5</ce:cross-ref>). Our usability tests clearly established that AHE with ACD is more usable than AHE alone.</ce:para></ce:section></ce:section><ce:section id="sec0110" view="all"><ce:label>8</ce:label><ce:section-title id="sect0125">AHE 3.0 in action: e-infrastructure based multiscale simulation</ce:section-title><ce:para id="p0450" view="all">Like its predecessors, AHE 3.0 is being actively used by several large research projects. AHE provides the principal HPC access tool in the VPH-Share project <ce:cross-ref id="crf0335" refid="bib0210">[42]</ce:cross-ref>, a currently funded endeavour within the Virtual Physiological Human (VPH) initiative <ce:cross-ref id="crf0340" refid="bib0215">[43]</ce:cross-ref>, concerned with patient-specific biomedical modelling and simulation. The aim of this project is to develop a set of intelligent services and supporting network infrastructure that will facilitate the exposure and sharing of data and knowledge. In particular, it is developing a multi-scale framework for the composition of new biomedical workflows to promote collaboration within the VPH community.</ce:para><ce:para id="p0455" view="all">As part of this infrastructure, VPH-Share is developing a cloud platform that will allow users to easily access computational as well as data resources. AHE and ACD together constitute the HPC gateway service for VPH-Share, allowing simulations that require more computational power than the VPH-Share cloud infrastructure is able to provide to be seamlessly run on HPC resources. AHE and ACD are deployed based on the Software as a Service (SaaS) model. AHE is responsible for handling the execution life cycle of virtualized applications on computational resources, while ACD bridges the gap between different security infrastructures used by the execution platform and those remote resources. This allows simulation workflows to be deployed which combine resources from a cloud provider such as Amazon in order to execute single core and small scale parallel simulations, but that can switch to high performance computing, accessed via AHE, to run parts of the workflow that require more computational power. The ability of the Taverna workflow system used by VPH-Share to call AHE's RESTful interface allows applications hosted in AHE to be included as components in Taverna workflows.</ce:para><ce:para id="p0460" view="all">The system is being used in production runs by VPH-Share scientists to run the Chaste code <ce:cross-ref id="crf0345" refid="bib0220">[44]</ce:cross-ref> to model personalized treatments of cardiac arrythmias in patients. AHE allows the researchers to launch Chaste simulations on the HECToR HPC machine in the UK (part of PRACE), marshal input and output data and manage parameter sweeps. It also allows data to be staged in and out of the EUDAT <ce:cross-ref id="crf0350" refid="bib0225">[45]</ce:cross-ref> data storage infrastructure as necessary.</ce:para><ce:para id="p0465" view="all">Additionally, the AHE client API has been integrated with the GridSpace2 workflow engine <ce:cross-ref id="crf0355" refid="bib0230">[46]</ce:cross-ref> within the MAPPER project, and as part of the Virtual Imaging Platform (VIP) <ce:cross-ref id="crf0360" refid="bib0235">[47]</ce:cross-ref>. The MAPPER project aims to develop a persistent production infrastructure for distributed multiscale computing <ce:cross-ref id="crf0365" refid="bib0240">[48]</ce:cross-ref>, making use of resources from multiple European e-infrastructures. AHE provides a key interoperability layer allowing higher level MAPPER services and interface tools to seamlessly access and connect these distinct resources.</ce:para><ce:para id="p0470" view="all">MAPPER applications couple codes operating at different temporal and spatial resolutions together. An illustration of such an application is given in <ce:cross-ref id="crf0370" refid="fig0025">Fig. 5</ce:cross-ref><ce:float-anchor refid="fig0025"/>, which shows an application from the materials science domain <ce:cross-ref id="crf0375" refid="bib0245">[49]</ce:cross-ref>. This application invokes parameters generated at the quantum level (using CarâParrinello molecular dynamics (CPMD)) to build an atomistic simulation of a material using the Large-scale Atomic/Molecular Massively Parallel Simulator (LAMMPS)), and then uses parameters generated at this level to perform a coarse grained molecular simulation (again using LAMMPS).</ce:para><ce:para id="p0475" view="all">Each of the MAPPER applications requires access to suitable resources to run, often concurrently or in a particular sequence. AHE's ability to couple with advanced reservation tools such as QCG Computing means that MAPPER applications can be scheduled to run in advance (co-)reservations on HPC resources. This is of course dependent on the machines providing advanced reservation capabilities; it is essential for resource providers to implement such policies in order for these kinds of applications to be run.</ce:para><ce:para id="p0480" view="all">The VIP project targets multi-modality, multi-organ and dynamic medical image simulation, integrating proven simulation software to simulate four main imaging modalities. This project builds on the Virtual Imaging Platform, a French ANR (National Agency for Research) project aiming at building a multi-modality simulation platform for the main medical imaging modalities, namely Magnetic Resonance Imaging (MRI), Ultrasound imaging (US), Positron Emission Tomography (PET) and Computed Tomography (CT).</ce:para><ce:para id="p0485" view="all">Typically the simulations considered by VIP have been executed in an âembarrassingly parallel" fashion on cluster machines and are managed via the VIP platform. The platform can perform complex simulations, such as whole-body CT scans, in a reasonable time thanks to its connection to EGI, which provides access to a distributed set of clusters. However, some imaging simulation codes can be parallelized and thus benefit substantially from access to high performance computing resources. By integrating calls to AHE, via the AHE client API, with the VIP portal and workflow engine, this requirement has been satisfied. AHE provides a bridge between EGI and the HPC facilities provided by PRACE, so that simulations which require greater power than EGI can provide can instead be run on the PRACE platform.</ce:para><ce:para id="p0490" view="all">Common to all of these projects is the need to use AHE's capabilities as an interoperability layer to bridge across disparate e-infrastructures, meaning that AHE provides a single interface to a variety of resources, from PRACE, through EGI to local campus based clusters. AHE's ability to connect to a wide range of different backend middleware tools makes it an ideal candidate to federate resource access from the user's perspective. Integration with ACD means that appropriate security credentials are presented to the target infrastructure by AHE when a user needs to execute a simulation, making the use of multiple e-infrastructure platforms transparent to the user.</ce:para></ce:section><ce:section id="sec0115" view="all"><ce:label>9</ce:label><ce:section-title id="sect0130">Conclusions and future work</ce:section-title><ce:para id="p0495" view="all">Since its initial release, AHE has been taken up by various user communities, where its usability features have proved extremely important. AHE has been employed to host computational codes from different scientific domains, including widely used codes such as NAMD, CHARMM, LAMMPS, VASP, LB3D and DL_POLY. A key strength of AHE is its flexibility. Since all of its complexity resides on the server side, and all of AHE's functionality is exposed as RESTful Web services, AHE can be used as a building block for systems of much greater complexity.</ce:para><ce:para id="p0500" view="all">As our performance tests have shown, the redesign of AHE 3.0 has greatly improved performance over older AHE versions. Our usability results have also confirmed the benefit of the Application Interaction Model in that user interaction is reduced to the most essential components: namely a user interacting with his/her application. Users do not need to worry about the details of particular batch queuing systems, or how to stage data back from particular HPC resources; the specifics of how to launch an application are encapsulated within the Application Interaction Model. The approach virtualizes the HPC resources from a user's point of view. Indeed AHE virtualizes the entirety of a grid's HPC resources, and federates resources stemming from multiple different e-infrastructures.</ce:para><ce:para id="p0505" view="all">AHE 3.0 provides a number of capabilities including a workflow engine that allows complex simulations to be created, including coupled simulations where data is automatically transferred from one application to another. ACD provides a security suite that includes support for Shibboleth authentication, as well as user auditing. ACD supports virtual organization management and is able to provide access to grid proxy credentials through RESTful web services.</ce:para><ce:para id="p0510" view="all">This combination of usability and performance embedded into a feature-rich platform have led AHE and ACD to become an important cornerstone of many research projects, from materials science through computational physics and chemistry to life and medical sciences. These projects have in common a need for a computational platform to provide access to high performance computational resources and links to cloud computing infrastructures. ACD and AHE allow e-infrastructure to be accessed in a similar manner as an IaaS cloud resource. This is achieved by virtualizing applications using an SaaS model, exposing their functionality as simple RESTful web services, and by abstracting the security mechanism of the e-infrastructure middleware through ACD. Although they may be and often are deployed in combination as part of a project specific e-infrastructure, AHE and ACD are also standalone tools, and can be deployed within any similar e-infrastructure that requires transparent access to high end computing resources.</ce:para><ce:para id="p0520" view="all">AHE 3.0 and ACD have been released under the LGPL licence and can be downloaded from: <ce:inter-ref id="intr0010" xlink:href="https://sourceforge.net/projects/ahe3/" xlink:type="simple">https://sourceforge.net/projects/ahe3/</ce:inter-ref>.</ce:para></ce:section></ce:sections><ce:acknowledgment id="ack0005" view="all"><ce:section-title id="sect0135">Acknowledgements</ce:section-title><ce:para id="p0525" view="all">The developments of AHE and ACD reported in this paper have been funded by the <ce:grant-sponsor id="gs0005" xlink:type="simple" xlink:role="http://www.elsevier.com/xml/linking-roles/grant-sponsor">EU FP7 VPH-Share</ce:grant-sponsor> (no. <ce:grant-number refid="gs0005">269978</ce:grant-number>), <ce:grant-sponsor id="gs0010" xlink:type="simple" xlink:role="http://www.elsevier.com/xml/linking-roles/grant-sponsor">VPH-NoE</ce:grant-sponsor> (no. <ce:grant-number refid="gs0010">223920</ce:grant-number>), <ce:grant-sponsor id="gs0015" xlink:type="simple" xlink:role="http://www.elsevier.com/xml/linking-roles/grant-sponsor">MAPPER</ce:grant-sponsor> (no. <ce:grant-number refid="gs0015">261507</ce:grant-number>) and <ce:grant-sponsor id="gs0020" xlink:type="simple" xlink:role="http://www.elsevier.com/xml/linking-roles/grant-sponsor">ContraCancrum</ce:grant-sponsor> (no. <ce:grant-number refid="gs0020">223979</ce:grant-number>) projects. Previously they were funded by the <ce:grant-sponsor id="gs0025" xlink:type="simple" xlink:role="http://www.elsevier.com/xml/linking-roles/grant-sponsor">EPSRC projects RealityGrid</ce:grant-sponsor> (<ce:grant-number refid="gs0025">GR/R67699</ce:grant-number>), <ce:grant-sponsor id="gs0030" xlink:type="simple" xlink:role="http://www.elsevier.com/xml/linking-roles/grant-sponsor">Rapid Prototyping of Usable Grid Middleware</ce:grant-sponsor> (<ce:grant-number refid="gs0030">GR/T27488/01</ce:grant-number>), <ce:grant-sponsor id="gs0035" xlink:type="simple" xlink:role="http://www.elsevier.com/xml/linking-roles/grant-sponsor">User-Friendly Authentication and Authorization for Grid Environments</ce:grant-sponsor> (<ce:grant-number refid="gs0035">EP/D051754/1</ce:grant-number>), and also by <ce:grant-sponsor id="gs0040" xlink:type="simple" xlink:role="http://www.elsevier.com/xml/linking-roles/grant-sponsor">OMII under the Managed Programme Robust Application Hosting in WSRF::Lite (RAHWL)</ce:grant-sponsor> project. SJZ's PhD studentship is funded by <ce:grant-sponsor id="gs0045" xlink:type="simple" xlink:role="http://www.elsevier.com/xml/linking-roles/grant-sponsor">EPSRC</ce:grant-sponsor>.</ce:para><ce:para id="p0530" view="all">We would like to thank Maciej Pawlik and Grzegorz Dyk from Cyfronet, Krakow, Poland, and William Romero from CNRS Lyon, France, for their contributions to the code, and also Mariusz Mamonski and Tomasz Piontek from Poznan Super Computing and Networking Center, Poland for useful discussions relating to advance reservation.</ce:para></ce:acknowledgment></body><tail view="all"><ce:bibliography id="bibl0005" view="all"><ce:section-title id="sect0140">References</ce:section-title><ce:bibliography-sec id="bibs0005" view="all"><ce:bib-reference id="bib0005"><ce:label>[1]</ce:label><sb:reference id="sbref0005"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>D.</ce:given-name><ce:surname>Turek</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>High performance computing and the implications of multi-core architectures</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>CTWatch Quarterly</sb:maintitle></sb:title><sb:volume-nr>3</sb:volume-nr></sb:series><sb:date>2007</sb:date></sb:issue><sb:pages><sb:first-page>31</sb:first-page><sb:last-page>33</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0010"><ce:label>[2]</ce:label><sb:reference id="sbref0010"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Dongarra</ce:surname></sb:author><sb:author><ce:given-name>D.</ce:given-name><ce:surname>Gannon</ce:surname></sb:author><sb:author><ce:given-name>G.</ce:given-name><ce:surname>Fox</ce:surname></sb:author><sb:author><ce:given-name>K.</ce:given-name><ce:surname>Kennedy</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>The impact of multicore on computational science software</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>CTWatch Quarterly</sb:maintitle></sb:title><sb:volume-nr>3</sb:volume-nr></sb:series><sb:date>2007</sb:date></sb:issue><sb:pages><sb:first-page>1</sb:first-page><sb:last-page>10</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0015"><ce:label>[3]</ce:label><ce:other-ref id="oref0015"><ce:textref>P.V. Coveney (Ed.), Scientific Grid Computing, Vol. 363, Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences, 2005.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0020"><ce:label>[4]</ce:label><sb:reference id="sbref0020"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>I.</ce:given-name><ce:surname>Foster</ce:surname></sb:author><sb:author><ce:given-name>C.</ce:given-name><ce:surname>Kesselman</ce:surname></sb:author><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Tuecke</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>The anatomy of the grid: enabling scalable virtual organizations</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>International Journal of Supercomputer Applications</sb:maintitle></sb:title><sb:volume-nr>15</sb:volume-nr></sb:series><sb:date>2001</sb:date></sb:issue><sb:pages><sb:first-page>3</sb:first-page><sb:last-page>23</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0025"><ce:label>[5]</ce:label><sb:reference id="sbref0025"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Chin</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Towards Tractable Toolkits for the Grid: a Plea for Lightweight, Useable Middleware, Tech. rep.</sb:maintitle></sb:title></sb:contribution><sb:host><sb:book><sb:date>2004</sb:date></sb:book></sb:host><sb:host><sb:e-host><ce:inter-ref id="intr0015" xlink:href="http://nesc.ac.uk/technical_papers/UKeS-2004-01.pdf" xlink:type="simple">http://nesc.ac.uk/technical_papers/UKeS-2004-01.pdf</ce:inter-ref></sb:e-host></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0030"><ce:label>[6]</ce:label><sb:reference id="sbref0030"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>M.</ce:given-name><ce:surname>Halling-Brown</ce:surname></sb:author><sb:author><ce:given-name>D.</ce:given-name><ce:surname>Moss</ce:surname></sb:author><sb:author><ce:given-name>C.</ce:given-name><ce:surname>Sansom</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Shepherd</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>A computational grid framework for immunological applications</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Philosophical Transactions of the Royal Society A</sb:maintitle></sb:title><sb:volume-nr>367</sb:volume-nr></sb:series><sb:date>2009</sb:date></sb:issue><sb:pages><sb:first-page>2705</sb:first-page><sb:last-page>2716</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0035"><ce:label>[7]</ce:label><sb:reference id="sbref0035"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author><sb:author><ce:given-name>R.S.</ce:given-name><ce:surname>Saksena</ce:surname></sb:author><sb:author><ce:given-name>S.J.</ce:given-name><ce:surname>Zasada</ce:surname></sb:author><sb:author><ce:given-name>M.</ce:given-name><ce:surname>McKeown</ce:surname></sb:author><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Pickles</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>The application hosting environment: lightweight middleware for grid-based computational science</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Computer Physics Communications</sb:maintitle></sb:title><sb:volume-nr>176</sb:volume-nr></sb:series><sb:issue-nr>6</sb:issue-nr><sb:date>2007</sb:date></sb:issue><sb:pages><sb:first-page>406</sb:first-page><sb:last-page>418</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0040"><ce:label>[8]</ce:label><sb:reference id="sbref0040"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>S.J.</ce:given-name><ce:surname>Zasada</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Virtualizing access to scientific applications with the application hosting environment</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Computer Physics Communications</sb:maintitle></sb:title><sb:volume-nr>180</sb:volume-nr></sb:series><sb:issue-nr>12</sb:issue-nr><sb:date>2009</sb:date></sb:issue><sb:pages><sb:first-page>2513</sb:first-page><sb:last-page>2525</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0045"><ce:label>[9]</ce:label><sb:reference id="sbref0045"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>S.K.</ce:given-name><ce:surname>Sadiq</ce:surname></sb:author><sb:author><ce:given-name>D.</ce:given-name><ce:surname>Wright</ce:surname></sb:author><sb:author><ce:given-name>S.J.</ce:given-name><ce:surname>Watson</ce:surname></sb:author><sb:author><ce:given-name>S.J.</ce:given-name><ce:surname>Zasada</ce:surname></sb:author><sb:author><ce:given-name>I.</ce:given-name><ce:surname>Stoica</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Automated molecular simulation based binding affinity calculator for ligand-bound HIV-1 proteases</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Journal of Chemical Information and Modeling</sb:maintitle></sb:title><sb:volume-nr>48</sb:volume-nr></sb:series><sb:issue-nr>9</sb:issue-nr><sb:date>2008</sb:date></sb:issue><sb:pages><sb:first-page>1909</sb:first-page><sb:last-page>1919</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0050"><ce:label>[10]</ce:label><sb:reference id="sbref0050"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>J.L.</ce:given-name><ce:surname>Suter</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author><sb:author><ce:given-name>H.C.</ce:given-name><ce:surname>Greenwell</ce:surname></sb:author><sb:author><ce:given-name>M.-A.</ce:given-name><ce:surname>Thyveetil</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Large-scale molecular dynamics study of montmorillonite clay: emergence of undulatory fluctuations and determination of material properties</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>The Journal of Physical Chemistry C</sb:maintitle></sb:title><sb:volume-nr>111</sb:volume-nr></sb:series><sb:issue-nr>23</sb:issue-nr><sb:date>2007</sb:date></sb:issue><sb:pages><sb:first-page>8248</sb:first-page><sb:last-page>8259</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0055"><ce:label>[11]</ce:label><sb:reference id="sbref0055"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>R.T.</ce:given-name><ce:surname>Fielding</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Architectural styles and the design of network-based software architectures</sb:maintitle></sb:title></sb:contribution><sb:host><sb:book><sb:date>2000</sb:date></sb:book></sb:host><sb:comment>(Ph.D. thesis)</sb:comment></sb:reference></ce:bib-reference><ce:bib-reference id="bib0060"><ce:label>[12]</ce:label><sb:reference id="sbref0060"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Graham</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Karmarkar</ce:surname></sb:author><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Mischkinsky</ce:surname></sb:author><sb:author><ce:given-name>I.</ce:given-name><ce:surname>Robinson</ce:surname></sb:author><sb:author><ce:given-name>I.</ce:given-name><ce:surname>Sedukin</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Web Services Resource Framework, Tech. rep.</sb:maintitle></sb:title></sb:contribution><sb:host><sb:book><sb:date>2006</sb:date></sb:book></sb:host><sb:host><sb:e-host><ce:inter-ref id="intr0020" xlink:href="http://docs.oasis-open.org/wsrf/wsrf-ws_resource-1.2-spec-os.pdf" xlink:type="simple">http://docs.oasis-open.org/wsrf/wsrf-ws_resource-1.2-spec-os.pdf</ce:inter-ref></sb:e-host></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0065"><ce:label>[13]</ce:label><ce:other-ref id="oref0065"><ce:textref>WINE, <ce:inter-ref id="intr0025" xlink:href="http://www.winehq.org/" xlink:type="simple">http://www.winehq.org/</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0070"><ce:label>[14]</ce:label><sb:reference id="sbref0070"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Scientific grid computing</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>, Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences</sb:maintitle></sb:title><sb:volume-nr>363</sb:volume-nr></sb:series><sb:issue-nr>1833</sb:issue-nr><sb:date>2005</sb:date></sb:issue><sb:pages><sb:first-page>1707</sb:first-page><sb:last-page>1713</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0075"><ce:label>[15]</ce:label><sb:reference id="sbref0075"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Manos</ce:surname></sb:author><sb:author><ce:given-name>S.J.</ce:given-name><ce:surname>Zasada</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Life or death decision-making: the medical case for large-scale on-demand grid computing</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>CTWatch Quarterly Journal</sb:maintitle></sb:title><sb:volume-nr>4</sb:volume-nr></sb:series><sb:issue-nr>2</sb:issue-nr><sb:date>2008</sb:date></sb:issue><sb:pages><sb:first-page>35</sb:first-page><sb:last-page>45</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0080"><ce:label>[16]</ce:label><sb:reference id="sbref0080"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>B.</ce:given-name><ce:surname>Beckles</ce:surname></sb:author><sb:author><ce:given-name>V.</ce:given-name><ce:surname>Welch</ce:surname></sb:author><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Basney</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Mechanisms for increasing the usability of grid security</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>International Journal of HumanâComputer Studies</sb:maintitle></sb:title><sb:volume-nr>63</sb:volume-nr></sb:series><sb:issue-nr>1/2</sb:issue-nr><sb:date>2005</sb:date></sb:issue><sb:pages><sb:first-page>74</sb:first-page><sb:last-page>101</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0085"><ce:label>[17]</ce:label><sb:reference id="sbref0085"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>S.J.</ce:given-name><ce:surname>Zasada</ce:surname></sb:author><sb:author><ce:given-name>A.N.</ce:given-name><ce:surname>Haidar</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>On the usability of grid middleware and security mechanisms</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences</sb:maintitle></sb:title><sb:volume-nr>369</sb:volume-nr></sb:series><sb:issue-nr>1949</sb:issue-nr><sb:date>2011</sb:date></sb:issue><sb:pages><sb:first-page>3413</sb:first-page><sb:last-page>3428</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0090"><ce:label>[18]</ce:label><sb:reference id="sbref0090"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>B.</ce:given-name><ce:surname>Boghosian</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Dong</ce:surname></sb:author><sb:author><ce:given-name>L.</ce:given-name><ce:surname>Finn</ce:surname></sb:author><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Jha</ce:surname></sb:author><sb:author><ce:given-name>G.</ce:given-name><ce:surname>Karniadakis</ce:surname></sb:author><sb:author><ce:given-name>N.</ce:given-name><ce:surname>Karonis</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>NEKTAR, SPICE and Vortonics: using federated grids for large scale scientific applications</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Cluster Computing</sb:maintitle></sb:title><sb:volume-nr>10</sb:volume-nr></sb:series><sb:issue-nr>3</sb:issue-nr><sb:date>2007</sb:date></sb:issue><sb:pages><sb:first-page>351</sb:first-page><sb:last-page>364</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0095"><ce:label>[19]</ce:label><ce:other-ref id="oref0095"><ce:textref>UK Collaborative Computational Projects, <ce:inter-ref id="intr0030" xlink:href="http://www.ccp.ac.uk/" xlink:type="simple">http://www.ccp.ac.uk/</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0100"><ce:label>[20]</ce:label><sb:reference id="sbref0100"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>S.J.</ce:given-name><ce:surname>Zasada</ce:surname></sb:author><sb:author><ce:given-name>M.</ce:given-name><ce:surname>Mamonski</ce:surname></sb:author><sb:author><ce:given-name>D.</ce:given-name><ce:surname>Groen</ce:surname></sb:author><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Borgdorff</ce:surname></sb:author><sb:author><ce:given-name>I.</ce:given-name><ce:surname>Saverchenko</ce:surname></sb:author><sb:author><ce:given-name>T.</ce:given-name><ce:surname>Piontek</ce:surname></sb:author><sb:author><ce:given-name>K.</ce:given-name><ce:surname>Kurowski</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Distributed infrastructure for multiscale computing</sb:maintitle></sb:title></sb:contribution><sb:host><sb:edited-book><sb:title><sb:maintitle>Proceedings of the 2012 IEEE/ACM 16th International Symposium on Distributed Simulation and Real Time Applications</sb:maintitle></sb:title><sb:conference>IEEE Computer Society</sb:conference><sb:date>2012</sb:date></sb:edited-book><sb:pages><sb:first-page>65</sb:first-page><sb:last-page>74</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0105"><ce:label>[21]</ce:label><ce:other-ref id="oref0105"><ce:textref>JBPM â JBoss Community, <ce:inter-ref id="intr0035" xlink:href="http://www.jboss.org/jbpm" xlink:type="simple">http://www.jboss.org/jbpm</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0110"><ce:label>[22]</ce:label><ce:other-ref id="oref0110"><ce:textref>Hibernate â JBoss Community, <ce:inter-ref id="intr0040" xlink:href="http://www.hibernate.org/" xlink:type="simple">http://www.hibernate.org/</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0115"><ce:label>[23]</ce:label><ce:other-ref id="oref0115"><ce:textref>Restlet â RESTful web services framework for Java, <ce:inter-ref id="intr0045" xlink:href="http://www.restlet.org/" xlink:type="simple">http://www.restlet.org/</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0120"><ce:label>[24]</ce:label><ce:other-ref id="oref0120"><ce:textref>The Apache Tomcat Servlet Container, <ce:inter-ref id="intr0050" xlink:href="http://tomcat.apache.org" xlink:type="simple">http://tomcat.apache.org</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0125"><ce:label>[25]</ce:label><ce:other-ref id="oref0125"><ce:textref>The Globus Project, <ce:inter-ref id="intr0055" xlink:href="http://www.globus.org" xlink:type="simple">http://www.globus.org</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0130"><ce:label>[26]</ce:label><ce:other-ref id="oref0130"><ce:textref>The UNICORE Project, <ce:inter-ref id="intr0060" xlink:href="http://www.unicore.org" xlink:type="simple">http://www.unicore.org</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0135"><ce:label>[27]</ce:label><sb:reference id="sbref0135"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>K.</ce:given-name><ce:surname>Kurowski</ce:surname></sb:author><sb:author><ce:given-name>W.</ce:given-name><ce:surname>de Back</ce:surname></sb:author><sb:author><ce:given-name>W.</ce:given-name><ce:surname>Dubitzky</ce:surname></sb:author><sb:author><ce:given-name>L.</ce:given-name><ce:surname>GulyÃ¡s</ce:surname></sb:author><sb:author><ce:given-name>G.</ce:given-name><ce:surname>Kampis</ce:surname></sb:author><sb:author><ce:given-name>M.</ce:given-name><ce:surname>Mamonski</ce:surname></sb:author><sb:author><ce:given-name>G.</ce:given-name><ce:surname>Szemes</ce:surname></sb:author><sb:author><ce:given-name>M.</ce:given-name><ce:surname>Swain</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Complex system simulations with QosCosGrid</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Computational Science-ICCS</sb:maintitle></sb:title><sb:volume-nr>2009</sb:volume-nr></sb:series><sb:date>2009</sb:date></sb:issue><sb:pages><sb:first-page>387</sb:first-page><sb:last-page>396</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0140"><ce:label>[28]</ce:label><sb:reference id="sbref0140"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>A.N.</ce:given-name><ce:surname>Haidar</ce:surname></sb:author><sb:author><ce:given-name>S.J.</ce:given-name><ce:surname>Zasada</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author><sb:author><ce:given-name>A.E.</ce:given-name><ce:surname>Abdallah</ce:surname></sb:author><sb:author><ce:given-name>B.</ce:given-name><ce:surname>Beckles</ce:surname></sb:author><sb:author><ce:given-name>M.A.S.</ce:given-name><ce:surname>Jones</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Audited credential delegation: a usable security solution for the virtual physiological human toolkit</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Interface Focus</sb:maintitle></sb:title><sb:volume-nr>1</sb:volume-nr></sb:series><sb:issue-nr>3</sb:issue-nr><sb:date>2011</sb:date></sb:issue><sb:pages><sb:first-page>462</sb:first-page><sb:last-page>473</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0145"><ce:label>[29]</ce:label><ce:other-ref id="oref0145"><ce:textref>W. Allcock, J. Bester, J. Bresnahan, A. Chervenak, L. Liming, S. Tuecke, GridFTP: Protocol extensions to FTP for the grid, Global Grid Forum GFD-RP 20, http://www.ggf.org/documents/GWD-R/GFD-R.020.pdf.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0150"><ce:label>[30]</ce:label><sb:reference id="sbref0150"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>P.</ce:given-name><ce:surname>Beckman</ce:surname></sb:author><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Nadella</ce:surname></sb:author><sb:author><ce:given-name>N.</ce:given-name><ce:surname>Trebon</ce:surname></sb:author><sb:author><ce:given-name>I.</ce:given-name><ce:surname>Beschastnikh</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>SPRUCE: a system for supporting urgent high-performance computing</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Grid-Based Problem Solving Environments</sb:maintitle></sb:title></sb:series><sb:date>2007</sb:date></sb:issue><sb:pages><sb:first-page>295</sb:first-page><sb:last-page>311</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0155"><ce:label>[31]</ce:label><sb:reference id="sbref0155"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Pickles</ce:surname></sb:author><sb:author><ce:given-name>R.</ce:given-name><ce:surname>Haines</ce:surname></sb:author><sb:author><ce:given-name>R.</ce:given-name><ce:surname>Pinning</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Porter</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>A practical toolkit for computational steering</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences</sb:maintitle></sb:title><sb:volume-nr>363</sb:volume-nr></sb:series><sb:issue-nr>1833</sb:issue-nr><sb:date>2005</sb:date></sb:issue><sb:pages><sb:first-page>1843</sb:first-page><sb:last-page>1853</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0160"><ce:label>[32]</ce:label><sb:reference id="sbref0160"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>C.</ce:given-name><ce:surname>Cavaness</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Quartz Job Scheduling Framework: Building Open Source Enterprise Applications</sb:maintitle></sb:title></sb:contribution><sb:host><sb:book><sb:date>2006</sb:date><sb:publisher><sb:name>Prentice Hall</sb:name><sb:location>Upper Saddle River, NJ, USA</sb:location></sb:publisher></sb:book></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0165"><ce:label>[33]</ce:label><sb:reference id="sbref0165"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>R.O.</ce:given-name><ce:surname>Sinnott</ce:surname></sb:author><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Jiang</ce:surname></sb:author><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Watt</ce:surname></sb:author><sb:author><ce:given-name>O.</ce:given-name><ce:surname>Ajayi</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Shibboleth-based access to and usage of grid resources</sb:maintitle></sb:title></sb:contribution><sb:host><sb:edited-book><sb:title><sb:maintitle>IEEE International Conference on Grid Computing</sb:maintitle></sb:title><sb:conference>Barcelona, Spain</sb:conference><sb:date>2006</sb:date></sb:edited-book><sb:pages><sb:first-page>28</sb:first-page><sb:last-page>29</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0170"><ce:label>[34]</ce:label><sb:reference id="sbref0170"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Novotny</ce:surname></sb:author><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Tuecke</ce:surname></sb:author><sb:author><ce:given-name>V.</ce:given-name><ce:surname>Welch</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>An online credential repository for the grid: MyProxy</sb:maintitle></sb:title></sb:contribution><sb:host><sb:edited-book><sb:title><sb:maintitle>10th IEEE International Symposium on High Performance Distributed Computing, 2001. IEEE Proceedings</sb:maintitle></sb:title><sb:date>2002</sb:date></sb:edited-book><sb:pages><sb:first-page>104</sb:first-page><sb:last-page>111</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0175"><ce:label>[35]</ce:label><sb:reference id="sbref0175"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>X.</ce:given-name><ce:surname>Wang</ce:surname></sb:author><sb:author><ce:given-name>M.</ce:given-name><ce:surname>Jones</ce:surname></sb:author><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Jensen</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Richards</ce:surname></sb:author><sb:author><ce:given-name>D.</ce:given-name><ce:surname>Wallom</ce:surname></sb:author><sb:author><ce:given-name>T.</ce:given-name><ce:surname>Ma</ce:surname></sb:author><sb:author><ce:given-name>R.</ce:given-name><ce:surname>Frank</ce:surname></sb:author><sb:author><ce:given-name>D.</ce:given-name><ce:surname>Spence</ce:surname></sb:author><sb:author><ce:given-name>S.</ce:given-name><ce:surname>Young</ce:surname></sb:author><sb:author><ce:given-name>C.</ce:given-name><ce:surname>Devereux</ce:surname></sb:author><sb:et-al/></sb:authors><sb:title><sb:maintitle>Shibboleth access for resources on the National Grid Service (SARoNGS)</sb:maintitle></sb:title></sb:contribution><sb:host><sb:edited-book><sb:title><sb:maintitle>Fifth International Conference on Information Assurance and Security, 2009</sb:maintitle></sb:title><sb:conference>IASâ09. Vol. 2, IEEE</sb:conference><sb:date>2009</sb:date></sb:edited-book><sb:pages><sb:first-page>338</sb:first-page><sb:last-page>341</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0180"><ce:label>[36]</ce:label><sb:reference id="sbref0180"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>R.</ce:given-name><ce:surname>Alfieri</ce:surname></sb:author><sb:author><ce:given-name>R.</ce:given-name><ce:surname>Cecchini</ce:surname></sb:author><sb:author><ce:given-name>V.</ce:given-name><ce:surname>Ciaschini</ce:surname></sb:author><sb:author><ce:given-name>L.</ce:given-name><ce:surname>dell Agnello</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Frohner</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Gianoli</ce:surname></sb:author><sb:author><ce:given-name>K.</ce:given-name><ce:surname>Lorentey</ce:surname></sb:author><sb:author><ce:given-name>F.</ce:given-name><ce:surname>Spataro</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>VOMS, an authorization system for virtual organizations</sb:maintitle></sb:title></sb:contribution><sb:host><sb:edited-book><sb:title><sb:maintitle>Grid Computing</sb:maintitle></sb:title><sb:conference>Springer</sb:conference><sb:date>2004</sb:date></sb:edited-book><sb:pages><sb:first-page>33</sb:first-page><sb:last-page>40</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0185"><ce:label>[37]</ce:label><sb:reference id="sbref0185"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>A.N.</ce:given-name><ce:surname>Haidar</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author><sb:author><ce:given-name>A.E.</ce:given-name><ce:surname>Abdallah</ce:surname></sb:author><sb:author><ce:given-name>P.Y.</ce:given-name><ce:surname>Ryan</ce:surname></sb:author><sb:author><ce:given-name>B.</ce:given-name><ce:surname>Beckles</ce:surname></sb:author><sb:author><ce:given-name>J.M.</ce:given-name><ce:surname>Brooke</ce:surname></sb:author><sb:author><ce:given-name>M.</ce:given-name><ce:surname>Jones</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Formal modelling of a usable identity management solution for virtual organisations</sb:maintitle></sb:title></sb:contribution><sb:host><sb:edited-book><sb:title><sb:maintitle>Proceedings of Formal Aspects of Virtual Organisations</sb:maintitle></sb:title><sb:date>2009</sb:date></sb:edited-book><sb:pages><sb:first-page>41</sb:first-page><sb:last-page>50</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0190"><ce:label>[38]</ce:label><ce:other-ref id="oref0190"><ce:textref>The Open Web Application Security Project, <ce:inter-ref id="intr0065" xlink:href="http://ww.owasp.org" xlink:type="simple">http://ww.owasp.org</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0195"><ce:label>[39]</ce:label><ce:other-ref id="oref0195"><ce:textref>OWASP top 10: The ten most critical web application security vulnerabilities (2007), <ce:inter-ref id="intr0070" xlink:href="http://www.owasp.org/index.php/Top_10_2010-Main" xlink:type="simple">http://www.owasp.org/index.php/Top_10_2010-Main</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0200"><ce:label>[40]</ce:label><sb:reference id="sbref0200"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Abdallah</ce:surname></sb:author><sb:author><ce:given-name>E.</ce:given-name><ce:surname>Khayat</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Formal <ce:italic>z</ce:italic> specifications of several flat role-based access control models</sb:maintitle></sb:title></sb:contribution><sb:host><sb:edited-book><sb:title><sb:maintitle>Software Engineering Workshop, 2006</sb:maintitle></sb:title><sb:conference>SEWâ06. 30th Annual IEEE/NASA, IEEE</sb:conference><sb:date>2006</sb:date></sb:edited-book><sb:pages><sb:first-page>282</sb:first-page><sb:last-page>292</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0205"><ce:label>[41]</ce:label><ce:other-ref id="oref0205"><ce:textref>UK National e-Infrastructure Service (NES), <ce:inter-ref id="intr0075" xlink:href="http://www.ngs.ac.uk" xlink:type="simple">http://www.ngs.ac.uk</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0210"><ce:label>[42]</ce:label><ce:other-ref id="oref0210"><ce:textref>The VPH-Share Project, <ce:inter-ref id="intr0080" xlink:href="http://www.vph-share.eu" xlink:type="simple">http://www.vph-share.eu</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0215"><ce:label>[43]</ce:label><sb:reference id="sbref0215"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>P.</ce:given-name><ce:surname>Hunter</ce:surname></sb:author><sb:author><ce:given-name>P.V.</ce:given-name><ce:surname>Coveney</ce:surname></sb:author><sb:author><ce:given-name>B.</ce:given-name><ce:surname>de Bono</ce:surname></sb:author><sb:author><ce:given-name>V.</ce:given-name><ce:surname>Diaz</ce:surname></sb:author><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Fenner</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Frangi</ce:surname></sb:author><sb:author><ce:given-name>P.</ce:given-name><ce:surname>Harris</ce:surname></sb:author><sb:author><ce:given-name>R.</ce:given-name><ce:surname>Hose</ce:surname></sb:author><sb:author><ce:given-name>P.</ce:given-name><ce:surname>Kohl</ce:surname></sb:author><sb:author><ce:given-name>P.</ce:given-name><ce:surname>Lawford</ce:surname></sb:author><sb:et-al/></sb:authors><sb:title><sb:maintitle>A vision and strategy for the virtual physiological human in 2010 and beyond</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences</sb:maintitle></sb:title><sb:volume-nr>368</sb:volume-nr></sb:series><sb:issue-nr>1920</sb:issue-nr><sb:date>2010</sb:date></sb:issue><sb:pages><sb:first-page>2595</sb:first-page><sb:last-page>2614</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0220"><ce:label>[44]</ce:label><sb:reference id="sbref0220"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Pitt-Francis</ce:surname></sb:author><sb:author><ce:given-name>P.</ce:given-name><ce:surname>Pathmanathan</ce:surname></sb:author><sb:author><ce:given-name>M.</ce:given-name><ce:surname>Bernabeu</ce:surname></sb:author><sb:author><ce:given-name>R.</ce:given-name><ce:surname>Bordas</ce:surname></sb:author><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Cooper</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Fletcher</ce:surname></sb:author><sb:author><ce:given-name>G.</ce:given-name><ce:surname>Mirams</ce:surname></sb:author><sb:author><ce:given-name>P.</ce:given-name><ce:surname>Murray</ce:surname></sb:author><sb:author><ce:given-name>J.</ce:given-name><ce:surname>Osborne</ce:surname></sb:author><sb:author><ce:given-name>A.</ce:given-name><ce:surname>Walter</ce:surname></sb:author><sb:et-al/></sb:authors><sb:title><sb:maintitle>Chaste: a test-driven approach to software development for biological modelling</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Computer Physics Communications</sb:maintitle></sb:title><sb:volume-nr>180</sb:volume-nr></sb:series><sb:issue-nr>12</sb:issue-nr><sb:date>2009</sb:date></sb:issue><sb:pages><sb:first-page>2452</sb:first-page><sb:last-page>2471</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0225"><ce:label>[45]</ce:label><ce:other-ref id="oref0225"><ce:textref>The EUDAT Project, <ce:inter-ref id="intr0085" xlink:href="http://www.eudat.eu" xlink:type="simple">http://www.eudat.eu</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0230"><ce:label>[46]</ce:label><sb:reference id="sbref0230"><sb:contribution langtype="en"><sb:authors><sb:author><ce:given-name>M.</ce:given-name><ce:surname>Malawski</ce:surname></sb:author><sb:author><ce:given-name>T.</ce:given-name><ce:surname>Bartynski</ce:surname></sb:author><sb:author><ce:given-name>M.</ce:given-name><ce:surname>Bubak</ce:surname></sb:author></sb:authors><sb:title><sb:maintitle>Invocation of operations from script-based grid applications</sb:maintitle></sb:title></sb:contribution><sb:host><sb:issue><sb:series><sb:title><sb:maintitle>Future Generation Computer Systems</sb:maintitle></sb:title><sb:volume-nr>26</sb:volume-nr></sb:series><sb:issue-nr>1</sb:issue-nr><sb:date>2010</sb:date></sb:issue><sb:pages><sb:first-page>138</sb:first-page><sb:last-page>146</sb:last-page></sb:pages></sb:host></sb:reference></ce:bib-reference><ce:bib-reference id="bib0235"><ce:label>[47]</ce:label><ce:other-ref id="oref0235"><ce:textref>The VIP Project, <ce:inter-ref id="intr0090" xlink:href="http://www.creatis.insa-lyon.fr/vip/" xlink:type="simple">http://www.creatis.insa-lyon.fr/vip/</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0240"><ce:label>[48]</ce:label><ce:other-ref id="oref0240"><ce:textref>The MAPPER Project, <ce:inter-ref id="intr0095" xlink:href="http://www.mapper.eu" xlink:type="simple">http://www.mapper.eu</ce:inter-ref>.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0245"><ce:label>[49]</ce:label><ce:other-ref id="oref0245"><ce:textref>J. Suter, D. Groen, L. Kabalan, P.V. Coveney, Distributed multiscale simulations of clay-polymer nanocomposites, MRS Online Proceedings Library 1470 (1) (2012).</ce:textref></ce:other-ref></ce:bib-reference></ce:bibliography-sec></ce:bibliography><ce:biography id="vt0005" view="all"><ce:link locator="fx1"/><ce:simple-para id="spar0015" view="all"><ce:bold>Stefan J. Zasada</ce:bold> is a software engineer in the Centre for Computational Science at UCL, developing lightweight grid middleware and enabling tools for e-Science. He has a first degree in Computer Science from the University of Nottingham and a Masters degree in Advanced Software Engineering from the University of Manchester, where he was responsible for implementing the WS-Security specification in Perl for use by the WSRF::Lite toolkit. Currently he is lead developer on the AHE project. He is involved in developing medical data sharing solutions in the the EU FP7 p-medicine and UK MRC Farr projects, and also lightweight grid middleware and enabling tools for e-Science. He is currently completing his PhD in Computer Science, investigating the design and development of lightweight application virtualization toolkits and market based resource allocation solutions. His research interests cover many aspects of high performance and grid computing, and their application in the medical and life sciences domain.</ce:simple-para></ce:biography><ce:biography id="vt0010" view="all"><ce:link locator="fx2"/><ce:simple-para id="spar0020" view="all"><ce:bold>David Chan-Wei Chang</ce:bold> is currently a research associate in the Graduate School of Biomedical Engineering, University of New South Wales, Sydney, Australia. He is working in the area of tele-health and tele-care, clinical decision support and machine learning. He was previously at the Centre for Computational Science at University College London, working in the VPH-Share and p-medicine projects. He completed his BSc, MSc and PhD degrees at the University of New South Wales, where he worked in the Biomedical System Laboratory on a number different projects, including the development of clinical decision support systems, non-intrusive wireless monitoring systems for the elderly and signal analysis. His research is focused on cardio electrophysiology, medical IT infrastructure and cloud and grid computing.</ce:simple-para></ce:biography><ce:biography id="vt0015" view="all"><ce:link locator="fx3"/><ce:simple-para id="spar0025" view="all"><ce:bold>Ali Nasrat Haidar</ce:bold> is an Application Security Consultant at HSBC Head office in London. He has a PhD in web services security and a Masters degree in information security from Royal Holloway, University of London. He is also a Visiting Research Fellow in the Centre for Computational Science at UCL, a part-time Research Fellow at Birmingham City University in the Cyber Security group, and a member of the UCL Cyber Security Centre of Excellence awarded by GCHQ in partnership with the Research Councils' Global Uncertainties Programme (RCUK) and the Department for Business Innovation and Skills (BIS). Prior to his current appointment, Ali was a Research Fellow at UCL and a Research Associate at the Centre for Software Reliability at Newcastle University. He was involved in developing secure e-Science applications, data sharing platforms, capturing user and security requirements for computational grid environments, providing formal models and analysis of these requirements to assist the design of security prototype. Ali was involved in a number of EU e-health research projects, such as the VPH-NOE (Virtual Physiological Human Network of Excellence), the ContraCancrum (Clinically Oriented Translational Cancer Multilevel Modelling) and p-medicine (Personalized Medicine). His research interests include secure software development, identity and access control management, grid and cloud security, information assurance and compliance.</ce:simple-para></ce:biography><ce:biography id="vt0020" view="all"><ce:link locator="fx4"/><ce:simple-para id="spar0030" view="all"><ce:bold>Peter V. Coveney</ce:bold> holds a Chair in Physical Chemistry, and is Director of the Centre for Computational Science, Director of the UCL Computational Life &amp; Medical Sciences Network, an Honorary Professor of Computer Science, and a member of CoMPLEX at UCL. He is also a founding member of the UK e-Infrastructure Leadership Council, a Medical Academy Nominated Expert on Data, Algorithms, and Modelling for the UK Prime Minister's Council for Science and Technology, and Professor Adjunct within the Yale School of Medicine at Yale University. He is active in a broad area of interdisciplinary theoretical research including condensed matter physics and chemistry, materials science, and life and medical sciences including collaborations with clinicians. He is a founding editor of the Journal of Computational Science and to date has published more than 300 scientific papers, edited 20 books, and coauthored two best-selling popular science books (The Arrow of Time and Frontiers of Complexity, both with Roger Highfield).</ce:simple-para></ce:biography></tail></article></xocs:serial-item></xocs:doc>