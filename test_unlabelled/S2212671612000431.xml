<full-text-retrieval-response xmlns="http://www.elsevier.com/xml/svapi/article/dtd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:prism="http://prismstandard.org/namespaces/basic/2.0/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xocs="http://www.elsevier.com/xml/xocs/dtd" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:tb="http://www.elsevier.com/xml/common/table/dtd" xmlns:sb="http://www.elsevier.com/xml/common/struct-bib/dtd" xmlns:sa="http://www.elsevier.com/xml/common/struct-aff/dtd" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:ja="http://www.elsevier.com/xml/ja/dtd" xmlns:ce="http://www.elsevier.com/xml/common/dtd" xmlns:cals="http://www.elsevier.com/xml/common/cals/dtd" xmlns:bk="http://www.elsevier.com/xml/bk/dtd"><coredata><prism:url>http://api.elsevier.com/content/article/pii/S2212671612000431</prism:url><dc:identifier>doi:10.1016/j.aasri.2012.06.042</dc:identifier><eid>1-s2.0-S2212671612000431</eid><prism:doi>10.1016/j.aasri.2012.06.042</prism:doi><pii>S2212-6716(12)00043-1</pii><dc:title>LBP Based Fast Face Recognition System on Symbian Platform </dc:title><prism:publicationName>AASRI Procedia</prism:publicationName><prism:aggregationType>Journal</prism:aggregationType><prism:issn>22126716</prism:issn><prism:volume>1</prism:volume><prism:startingPage>276</prism:startingPage><prism:endingPage>281</prism:endingPage><prism:pageRange>276-281</prism:pageRange><dc:format>text/xml</dc:format><prism:coverDate>2012-12-31</prism:coverDate><prism:coverDisplayDate>2012</prism:coverDisplayDate><prism:copyright>Copyright © 2012 Published by Elsevier B.V.</prism:copyright><prism:publisher>Published by Elsevier B.V.</prism:publisher><prism:issueName>AASRI Conference on Computational Intelligence and Bioinformatics</prism:issueName><dc:creator>Sun, Helei</dc:creator><dc:creator>Shen, Jie</dc:creator><dc:creator>Chen, Bin</dc:creator><dc:description>AbstractIn this paper, an implementation of a LBP (local binary pattern) based fast face recognition system on symbian platform is presented. First, face in picture taken from camera is detected using AdaBoost algorithm. Second, the pre-processing of the face is done, including eye location, geometric normalization, illumination normalization. During the face preprocessing, a rapid eye location method named ER (Eyeball Search) is proposed and implemented. Last, the improved LBP is adopted for recognition. Although the computational capability of the symbian platform is limited, the experimental results show good performance for recognition rate and time. in press</dc:description><openaccess>1</openaccess><openaccessArticle>true</openaccessArticle><openaccessType>Full</openaccessType><openArchiveArticle>false</openArchiveArticle><openaccessSponsorName/><openaccessSponsorType/><openaccessUserLicense>http://creativecommons.org/licenses/by-nc-nd/3.0/</openaccessUserLicense><dcterms:subject>Face recognition</dcterms:subject><dcterms:subject>Symbian platform</dcterms:subject><dcterms:subject>Rapid eye location</dcterms:subject><dcterms:subject>Eyeball Search</dcterms:subject><dcterms:subject>hierarchical multiscale LBP</dcterms:subject><link rel="self" href="http://api.elsevier.com/content/article/pii/S2212671612000431"/><link rel="scidir" href="http://www.sciencedirect.com/science/article/pii/S2212671612000431"/></coredata><scopus-id>84879851683</scopus-id><scopus-eid>2-s2.0-84879851683</scopus-eid><link rel="abstract" href="http://api.elsevier.com/content/abstract/scopus_id/84879851683"/><originalText><xocs:doc xmlns:xoe="http://www.elsevier.com/xml/xoe/dtd" xsi:schemaLocation="http://www.elsevier.com/xml/xocs/dtd http://be-prod3a/schema/dtds/document/fulltext/xcr/xocs-article.xsd"><xocs:meta><xocs:content-family>serial</xocs:content-family><xocs:content-type>JL</xocs:content-type><xocs:cid>282179</xocs:cid><xocs:ssids><xocs:ssid type="alllist">291210</xocs:ssid><xocs:ssid type="subj">291791</xocs:ssid><xocs:ssid type="subj">291877</xocs:ssid><xocs:ssid type="subj">291882</xocs:ssid><xocs:ssid type="subj">291883</xocs:ssid><xocs:ssid type="content">31</xocs:ssid><xocs:ssid type="oa">90</xocs:ssid></xocs:ssids><xocs:srctitle>AASRI Procedia</xocs:srctitle><xocs:normalized-srctitle>AASRIPROCEDIA</xocs:normalized-srctitle><xocs:orig-load-date yyyymmdd="20120821">2012-08-21</xocs:orig-load-date><xocs:available-online-date yyyymmdd="20120823">2012-08-23</xocs:available-online-date><xocs:ew-transaction-id>2014-11-18T16:43:20</xocs:ew-transaction-id><xocs:eid>1-s2.0-S2212671612000431</xocs:eid><xocs:pii-formatted>S2212-6716(12)00043-1</xocs:pii-formatted><xocs:pii-unformatted>S2212671612000431</xocs:pii-unformatted><xocs:doi>10.1016/j.aasri.2012.06.042</xocs:doi><xocs:item-stage>S300</xocs:item-stage><xocs:item-version-number>S300.3</xocs:item-version-number><xocs:item-weight>HEAD-AND-TAIL</xocs:item-weight><xocs:hub-eid>1-s2.0-S2212671612X00027</xocs:hub-eid><xocs:timestamp yyyymmdd="20150515">2015-05-15T07:34:50.698394-04:00</xocs:timestamp><xocs:dco>0</xocs:dco><xocs:tomb>0</xocs:tomb><xocs:date-search-begin>20120101</xocs:date-search-begin><xocs:date-search-end>20121231</xocs:date-search-end><xocs:year-nav>2012</xocs:year-nav><xocs:indexeddate epoch="1345507200">2012-08-21T00:00:00Z</xocs:indexeddate><xocs:articleinfo>rawtext articleinfo articletitlenorm authfirstinitialnorm authfirstsurnamenorm cid cids confeditor contenttype copyright crossmark dateloaded dateloadedtxt datesearch datesort dateupdated dco docsubtype doctype doi eid ewtransactionid hubeid indexeddate issn issnnorm itemstage itemtransactionid itemweight oauserlicense openaccess openarchive pg pgfirst pglast pii piinorm pubdateend pubdatestart pubdatetxt pubyr sortorder srctitle srctitlenorm srctype ssids alllist content oa subj suppl tomb vol volfirst volissue volumelist webpdf webpdfpagecount yearnav affil articletitle auth authfirstini authfull authkeywords authlast primabst ref</xocs:articleinfo><xocs:issns><xocs:issn-primary-formatted>2212-6716</xocs:issn-primary-formatted><xocs:issn-primary-unformatted>22126716</xocs:issn-primary-unformatted></xocs:issns><xocs:crossmark is-crossmark="0">false</xocs:crossmark><xocs:vol-first>1</xocs:vol-first><xocs:volume-list><xocs:volume>1</xocs:volume></xocs:volume-list><xocs:suppl>C</xocs:suppl><xocs:vol-iss-suppl-text>Volume 1</xocs:vol-iss-suppl-text><xocs:sort-order>42</xocs:sort-order><xocs:first-fp>276</xocs:first-fp><xocs:last-lp>281</xocs:last-lp><xocs:pages><xocs:first-page>276</xocs:first-page><xocs:last-page>281</xocs:last-page></xocs:pages><xocs:cover-date-orig><xocs:start-date>2012</xocs:start-date></xocs:cover-date-orig><xocs:cover-date-text>2012</xocs:cover-date-text><xocs:cover-date-start>2012-01-01</xocs:cover-date-start><xocs:cover-date-end>2012-12-31</xocs:cover-date-end><xocs:cover-date-year>2012</xocs:cover-date-year><xocs:title-editors-groups><xocs:title-editors-group><ce:title>AASRI Conference on Computational Intelligence and Bioinformatics</ce:title><ce:editors><ce:author-group><ce:author><ce:degrees>Dr.</ce:degrees><ce:given-name>Wei</ce:given-name><ce:surname>Deng</ce:surname></ce:author><ce:affiliation><ce:textfn>American Applied Sciences Research Institute, Suit C, 637 Vineland Ave, La Puente, CA 91746, United States of America</ce:textfn></ce:affiliation></ce:author-group></ce:editors></xocs:title-editors-group></xocs:title-editors-groups><xocs:document-type>article</xocs:document-type><xocs:document-subtype>fla</xocs:document-subtype><xocs:copyright-line>Copyright © 2012 Published by Elsevier B.V.</xocs:copyright-line><xocs:normalized-article-title>LBPBASEDFASTFACERECOGNITIONSYSTEMSYMBIANPLATFORM</xocs:normalized-article-title><xocs:normalized-first-auth-surname>SUN</xocs:normalized-first-auth-surname><xocs:normalized-first-auth-initial>H</xocs:normalized-first-auth-initial><xocs:references><xocs:ref-info refid="bib0005"/><xocs:ref-info refid="bib0010"/><xocs:ref-info refid="bib0015"/><xocs:ref-info refid="bib0020"/><xocs:ref-info refid="bib0025"/><xocs:ref-info refid="bib0030"/><xocs:ref-info refid="bib0035"/><xocs:ref-info refid="bib0040"/></xocs:references><xocs:refkeys><xocs:refkey3>SUNX2012X276</xocs:refkey3><xocs:refkey4lp>SUNX2012X276X281</xocs:refkey4lp><xocs:refkey4ai>SUNX2012X276XH</xocs:refkey4ai><xocs:refkey5>SUNX2012X276X281XH</xocs:refkey5></xocs:refkeys><xocs:open-access><xocs:oa-article-status is-open-access="1" is-open-archive="0">Full</xocs:oa-article-status><xocs:oa-access-effective-date>2013-07-15T12:00:47Z</xocs:oa-access-effective-date><xocs:oa-user-license>http://creativecommons.org/licenses/by-nc-nd/3.0/</xocs:oa-user-license><xocs:oa-access-inherited-from winid="http://vtw.elsevier.com/content/oaw/GEN_UNBOUNDED_ESWaived">OA-Window</xocs:oa-access-inherited-from></xocs:open-access><xocs:attachment-metadata-doc><xocs:attachment-set-type>item</xocs:attachment-set-type><xocs:pii-formatted>S2212-6716(12)00043-1</xocs:pii-formatted><xocs:pii-unformatted>S2212671612000431</xocs:pii-unformatted><xocs:eid>1-s2.0-S2212671612000431</xocs:eid><xocs:doi>10.1016/j.aasri.2012.06.042</xocs:doi><xocs:cid>282179</xocs:cid><xocs:timestamp>2014-11-19T14:21:05.831214-05:00</xocs:timestamp><xocs:cover-date-start>2012-01-01</xocs:cover-date-start><xocs:cover-date-end>2012-12-31</xocs:cover-date-end><xocs:attachments><xocs:web-pdf><xocs:attachment-eid>1-s2.0-S2212671612000431-main.pdf</xocs:attachment-eid><xocs:ucs-locator>https://s3.amazonaws.com/prod-ucs-content-store-us-east/content/pii:S2212671612000431/MAIN/application/pdf/1f1a7941be9e40d6496a086c68879ab7/main.pdf</xocs:ucs-locator><xocs:ucs-locator>https://s3-eu-west-1.amazonaws.com/prod-ucs-content-store-eu-west/content/pii:S2212671612000431/MAIN/application/pdf/1f1a7941be9e40d6496a086c68879ab7/main.pdf</xocs:ucs-locator><xocs:filename>main.pdf</xocs:filename><xocs:extension>pdf</xocs:extension><xocs:pdf-optimized>true</xocs:pdf-optimized><xocs:filesize>443262</xocs:filesize><xocs:web-pdf-purpose>MAIN</xocs:web-pdf-purpose><xocs:web-pdf-page-count>6</xocs:web-pdf-page-count><xocs:web-pdf-images><xocs:web-pdf-image><xocs:attachment-eid>1-s2.0-S2212671612000431-main_1.png</xocs:attachment-eid><xocs:ucs-locator>https://s3-eu-west-1.amazonaws.com/prod-ucs-content-store-eu-west/content/pii:S2212671612000431/PREVIEW/image/png/c0a34e3f6933ee9705845cc36683de0e/main_1.png</xocs:ucs-locator><xocs:ucs-locator>https://s3.amazonaws.com/prod-ucs-content-store-us-east/content/pii:S2212671612000431/PREVIEW/image/png/c0a34e3f6933ee9705845cc36683de0e/main_1.png</xocs:ucs-locator><xocs:filename>main_1.png</xocs:filename><xocs:extension>png</xocs:extension><xocs:filesize>43799</xocs:filesize><xocs:pixel-height>849</xocs:pixel-height><xocs:pixel-width>656</xocs:pixel-width><xocs:attachment-type>IMAGE-WEB-PDF</xocs:attachment-type><xocs:pdf-page-num>1</xocs:pdf-page-num></xocs:web-pdf-image></xocs:web-pdf-images></xocs:web-pdf></xocs:attachments></xocs:attachment-metadata-doc></xocs:meta><xocs:rawtext> AASRI Procedia   1  ( 2012 )  276 â€“ 281  2212-6716  2012 Published by Elsevier Ltd.  doi: 10.1016/j.aasri.2012.06.042      2012 AASRI Conference on Computational Intelligence and Bioinformatics  LBP Based Fast Face Recognition System on Symbian Platform  Helei Sun a, *, Jie Shen a , Bin Chen a   a School of Computer Science and Engineering  University of Electronic Science and Technology of China ,Chengdu, China    Abstract  In this paper, an implementation of a LBP (local binary pattern) based fast face recognition system on symbian platform is  presented. First, face in picture taken from camera is detected using AdaBoost algorithm. Second, the pre-processing of  the face is done, including eye location, geometric normalization, illumination normalization. During the face  preprocessing, a rapid eye location method named ER (Eyeball Search) is proposed and implemented. Last, the improved  LBP is adopted for recognition. Although the computational capability of the symbian platform is limited, the  experimental results show good performance for recognition rate and time.    Â© 2012 Published by Elsevier B.V.  Selection and/or peer review under responsibility of American Applied Science Research Institute    Keywords: Face recognition; Symbian platform; Rapid eye location; Eyeball Search; hierarchical multiscale LBP.  1. Introduction  Face recognition has been widely used in different fields. Many face recognition algorithms have gained  encouraging performance. Recently, with the popularity of digital cameras in mobile devices increasing  rapidly, an increasing attention is given to a new application field of face recognition on mobile phones [1].   This paper introduces the implementation of a LBP based fast face recognition system on symbian platform  in detail. The architecture of our system is shown in Fig. 1 (a). The system contains face detection, face pre- processing and face recognition, which are introduced in section 2, section 3 and section 4 respectively.      *Helei Sun. E-mail address: shl504@126.com.  AASRI Procedia www.elsevier.com/locate/procedia Available online at www.sciencedirect.com Open access under CC BY-NC-ND license. Open access under CC BY-NC-ND license. 277 Helei Sun et al. /  AASRI Procedia  1 ( 2012 )  276 â€“ 281    2. Face Detection  Face detection is the first step in face recognition system. Its reliability has a major influence on the  performance and usability of the entire face recognition system [3]. Reference [4][5] summarized a lot of face  detection methods. In this paper, AdaBoost based method is adopted for face detection because so far it is the  most successful ones in terms of detection accuracy and speed. This method can detect faces efficiently under  illumination and background variation conditions. Fig. 1 (b) shows a result of face detected by AdaBoost.                              Image Capture Stored  Feature Data                            Face Detection Preprocessing Feature Extraction Preprocessing Feature Extraction Classification Enrolment Recognition Recognition result                                     Fig.1. (a) The architecture of our system; (b) A result of face detected by AdaBoost.  3. Face Pre-processing  Face pre-processing is an important step of the face recognition system. Its reliability has an important  influence on the recognition rate. Fig. 2 shows some examples of face image detected by AdaBoost. These  images differ from each other in background, size, illumination, and so on. Therefore, each image has to be  normalized by same standard. The face pre-processing mainly contains geometric normalization, illumination  normalization and noise filtering. Generally, the first step of preprocessing is eye location.    Fig.2. Face images detected by AdaBoost.  3.1. Rapid eye location  There are many methods of eye location. Considering the limited amount of memory and a less powerful  processor of mobile phones, some complex and time consuming methods are not suitable. In this paper, a  quick and efficient eye location method named ER (Eyeball Search) is proposed and implemented, which is a  good trade-off between time and accuracy.  As shown in Fig. 2, these images are detected by AdaBoost. As a face has been detected, we can estimate  the area which contains the positions of the two eyes. Then, precise eye location is done by searching eyeballs  in the area. The concrete steps of Eyeball Search are given as follows.   1) Determine the boundary of search area  If a face image with size wÃ—h is divided into four regions averagely as shown in the first picture in Fig. 3,  in almost all cases, the eyes exist in the first and second region. The center point C with coordinate (w/2, h/2)  is one boundary point. Through a great deal of experiments, we determine the other two boundary points A  278   Helei Sun et al. /  AASRI Procedia  1 ( 2012 )  276 â€“ 281    and B with the coordinate of (3w/14, 13h/40) and (11w/14, 13h/40) respectively. So the search area is the area  containing the two rectangles demarcated by point A, B and C. See Fig. 3 (a) for details.  o y x C AB o C 1 2 3 4 y x h w h w                                 (x, y)   Fig.3. (a) Search area on the face; (b) The shape of eyeball we used.  2) Search the eyeballs in the determined area  After the search area is determined, we will search the right eyeball in the left rectangle and the left eyeball  in right rectangle. For instance, we search the right eyeball as follows.   First, for one point (x, y) in the left rectangle, add up pixel value of the surrounding points and the sum is  denoted as sum(x, y). Then find out the coordinate (i, j) making sum(i, j) be the minimum value.   tectangleleftyxyxsumji yx     ),()},({minarg),( ),( (1)  Æ’          Nn n n gyxsum 0 ),(  (2)  where g n  is the gray value of points around (x, y) as shown in the second picture Fig. 3, N is total number  involved. As the size of images we use is 320h240, the size of faces detected is about 100h100. The rough  shape of eyeball is like Fig. 3 (b).   The coordinate (i, j) is the position of the eye in the left rectangle and we can find the other eye in the right  rectangle using the same method. Fig.4. shows some examples of result of eye location.     Fig.4. Examples of result of eye location.  3.2. Geometric and  illumination normalization  The next step of pre-processing is geometric normalization that contains rotation, cropping, and scaling  process based on two eyes. First, rotate the image around the center using bilinear interpolation so that the line  through two eyes is horizontal. Second, let the length of line segment E r E l  be d and crop the image to 2dh2d.  Last, the face images are scaled to 100h100 using bilinear interpolation.   The images are captured in different background conditions, so they differ greatly in illumination and there  are also noises in them. In this paper, histogram equalization is used. This method usually increases the global  contrast of many images, and through this adjustment, the intensities can be better distributed on the  histogram. Then we use Gaussian filter reducing the noises in the face images. Fig. 5 shows an example.  279 Helei Sun et al. /  AASRI Procedia  1 ( 2012 )  276 â€“ 281    C Rotation l E r E r E l E 2d d d 2d 0.5d 1.5d d Cropping Scaling 100 100   Fig.4. The process of geometric normalization.  Histogram  equalization Gaussian  filtering   Fig.5. The Histogram equalization and Gaussian filtering.  4. Face recognition using hierarchical multiscale LBP  4.1. Face Recognition Using LBP  The local binary pattern (LBP) [7] was originally proposed for texture description and has achieved  promising result in texture classification. In [6], Ahonen proposed a method of face recognition using LBP.  Firstly, the face image is divided into R non-overlapping blocks (or regions) of same size. Secondly, every  Histogram of LBP codes are calculated over each block. Thirdly, the R histograms are concatenated into a  global histogram as the description of the face image. Lastly, a nearest-neighbor classifier is used for face  recognition by chi-square distance.   Ä‚Ä‚ concatenated histogram   Fig.6. Face recognition using LBP.  4.2. Face Recognition using hierarchical multiscale LBP  The length of a LBP histogram using standard LBP is much longer than the length using LBPu2 (only  using uniform pattern). Considering the limited computational resources of mobile phones, LBPu2 is a  suitable operator for generating LBP features.   Labeling all â€œnon-uniformâ€� patterns into one pattern makes the feature vector shorter but also means losing  more information. Reference [8] presented an improved LBP named hierarchical multiscale LBP. The first  picture in Fig. 7 shows an example: the pattern of big radius is non-uniform pattern, but the pattern of small  radius is uniform pattern. Thus, we label it to the uniform pattern according to the smaller radius.   First, for each pixel the pattern of the biggest radius is calculated. For those pixels whose pattern is  uniform pattern, a sub histogram is built. For those pixels whose pattern is non-uniform pattern, the pattern of  smaller radius is further calculated. The process stops when the new pattern of the pixel is uniform pattern or  280   Helei Sun et al. /  AASRI Procedia  1 ( 2012 )  276 â€“ 281    the pattern of the smallest radius is calculated. Finally, all the histograms of different radius are concatenated  into one histogram. The second picture in Fig. 7 shows an example calculating LBP from R=4 to R=2.                           ... ... ... R=4 R=3 R=2 Non-uniform Patterns of R=4 Non-uniform Patterns of R=3 Non-uniform Patterns of R=2 Uniform Patterns of R=4 Uniform Patterns of R=3 Uniform Patterns of R=2   Fig.7. (a) The pattern of big radius is non-uniform pattern, but the pattern of small radius is uniform pattern; (b) An example calculating  hierarchical multiscale LBP from R=4 to R=2.  Using hierarchical multiscale LBP for recognition is similar as shown above. First, the image is divided  into R blocks of the same size. Then the hierarchical multiscale LBP is calculated for each block. Next, all the  hierarchical multiscale LBPs are concatenated into one histogram for recognition. Last, the chi-square  distance between histograms is used for classification.  When the image has been divided into blocks, it is expected that some of the blocks contain more useful  information such as eyes and mouth. So a weight can be set for each block based on its importance. The  weighted D(S, T) statistic becomes:    Æ’          ji jiji jiji j TS TS wTSD , ,, 2 ,, )( ),(   (3)  where w j  is the weight for block j.  As the limited resolution of images captured from the mobile phone, the image cannot be divided into too  many blocks. In this paper, the image is divided into 3h3 blocks as shown in Fig. 8.   4 3 4 2 3 2 1 4 1   Fig.8. A facial image divided into 3h3 blocks and the weights set.   5. Implementation on symbian platform  The LBP based face recognition system is finally implemented on a mobile phone with Symbian OS and  an ARM11 processor with 430 MHZ. In our system, only images with size 240h320 are used and only the  biggest face is detected during the detection. The processing time of every step is shown in Table 1, from  which we know the total time is about 400ms when the number of images enrolled is 100.  We have done some experiments on our system to test the recognition rate of our system. We have taken  300 pictures of 10 people in 3 different dates, each people with 10 pictures in one date. Three experiments are  281 Helei Sun et al. /  AASRI Procedia  1 ( 2012 )  276 â€“ 281    done.  In experiment 1, for each people, 4 pictures on first date are randomly selected for enrolment, and all  the rest for recognition. In experiment 2, for each people, 4 pictures on first date and 4 pictures on second date  are randomly selected for enrolment. In experiment 3, for each people, 4 pictures on each date are randomly  selected for enrolment. The recognition rate is shown in table 2.   Table 1. Processing time of every step, where N is the number of images enrolled before recognition.  Step Face Detection Pre-processing Feature Extraction Classification  Processing Time(ms) 255 83 12 12 + 0.5N  Table 2. The recognition rate of different experiment.  Experiment  Experiment 1 Experiment 2 Experiment 3 Average Rate  Recognition Rate 82.31% 87.72% 93.33% 87.78 %  6. Conclusion  This paper introduced an implementation a LBP based fast face recognition system on Symbian platform in  detail. The AdaBoost algorithm is used for face detection. During face preprocessing, a rapid eye location  method is proposed and implemented. In the last, improved LBP is adopted for recognition. Eventually, the  system can process about 2.5 frames per second and its average recognition rate is up to 87.78 %.  Acknowledgements  This work is supported by the Industry, Education and Research Project of Guangdong Province (No.  20100901).  References  [1] K. Venkataramani, S. Qidwai, B. VijayaKumar. Face authentication from cell phone camera images with  illumination and temporal variations. IEEE Trans. on Systems, 2005, vol. 35, no. 3, 411â€“418.  [2] Shih-Wei Chu, Mei-Chen Yeh, Kwang-Ting Cheng. A Real-time, Embedded Face-Annotation System.  MMâ€™08, Vancouver, British Columbia, Canada. 2008, October 26â€“31.  [3] S. Z. Li, A. K. Jain. Handbook of Face Recognition. Springer-Verlag. New York; 2005.  [4] Ming-Hsuan Yang, David Kriegman, Narendra Ahuja. Detecting faces in images: A survey. Pattern  Analysis &amp; Machine Intelligence 24(1), January 2002, 34-58.  [5] E. Hjelmas, B. K. Low. Face detection: A survey. Computer Vision and Image Understanding,  2001;83:236-274.  [6] T. Ahonen, A. Hadid, M. Pietikainen, Face description with local binary patterns: Application to face  recognition, Transactions on Pattern Analysis and Machine Intelligence, 2006; vol. 28, no. 12, 2037â€“2041.  [7] Ojala, T., PietikÂ¨ ainen, M., Harwood, D.: A comparative study of texture measures with classification  based on feature distributions. Pattern Recognition 29 (1996) 51â€“59.  [8] Zhenhua Guo, Lei Zhang, David Zhang, and Xuanqin Mou, â€œHierarchical multiscale LBP for face and  palmprint recognitionâ€�, Image Processing (ICIP), 2010; 4521-4524.   ion. Last, the chi-square  distance between histograms is used for classification.  When the image has been divided into blocks, it is expected that some of the blocks contain more useful  information such as eyes and mouth. So a weight can be set for each block based on its importance. The  weighted D(S, T) statistic becomes:    Æ’          ji jiji jiji j TS TS wTSD , ,, 2 ,, )( ),(   (3)  where w j  is the weight for block j.  As the limited resolution of images captured from the mobile phone, the image cannot be divided into too  many blocks. In this paper, the image is divided into 3h3 blocks as shown in Fig. 8.   4 3 4 2 3 2 1 4 1   Fig.8. A facial image divided into 3h3 blocks and the weights set.   5. Implementation on symbian platform  The LBP based face recognition system is finally implemented on a mobile phone with Symbian OS and  an ARM11 processor with 430 MHZ. In our system, only images with size 240h320 are used and only the  biggest face is detected during the detection. The processing time of every step is shown in Table 1, from  which we know the total time is about 400ms when the number of images enrolled is 100.  We have done some experiments on our system to test the recognition rate of our system. We have taken  300 pictures of 10 people in 3 different dates, each people with 10 pictures in one date. Three experiments are  281 Helei Sun et al. /  AASRI Procedia  1 ( 2012 )  276 â€“ 281    done.  In experiment 1, for each people, 4 pictures on first date are randomly selected for enrolment, and all  the rest for recognition. In experiment 2, for each people, 4 pictures on first date and 4 pictures on second date  are randomly selected for enrolment. In experiment 3, for each people, 4 pictures on each date are randomly  selected for enrolment. The recognition rate is shown in table 2.   Table 1. Processing time of every step, where N is the number of images enrolled before recognition.  Step Face Detection Pre-processing Feature Extraction Classifi</xocs:rawtext><xocs:serial-item><article xmlns="http://www.elsevier.com/xml/ja/dtd" version="5.1" xml:lang="en" docsubtype="fla"><item-info><jid>AASRI</jid><aid>42</aid><ce:pii>S2212-6716(12)00043-1</ce:pii><ce:doi>10.1016/j.aasri.2012.06.042</ce:doi><ce:copyright type="unknown" year="2012"/></item-info><head><ce:title>LBP Based Fast Face Recognition System on Symbian Platform</ce:title><ce:author-group><ce:author><ce:given-name>Helei</ce:given-name><ce:surname>Sun</ce:surname><ce:cross-ref refid="cor0005"><ce:sup loc="post">⁎</ce:sup></ce:cross-ref><ce:e-address type="email">shl504@126.com</ce:e-address></ce:author><ce:author><ce:given-name>Jie</ce:given-name><ce:surname>Shen</ce:surname></ce:author><ce:author><ce:given-name>Bin</ce:given-name><ce:surname>Chen</ce:surname></ce:author><ce:affiliation><ce:textfn>School of Computer Science and Engineering University of Electronic Science and Technology of China,Chengdu, China</ce:textfn></ce:affiliation><ce:correspondence id="cor0005"><ce:label>⁎</ce:label><ce:text>Corresponding author.</ce:text></ce:correspondence></ce:author-group><ce:abstract class="author"><ce:section-title>Abstract</ce:section-title><ce:abstract-sec><ce:simple-para id="spar0005" view="all">In this paper, an implementation of a LBP (local binary pattern) based fast face recognition system on symbian platform is presented. First, face in picture taken from camera is detected using AdaBoost algorithm. Second, the pre-processing of the face is done, including eye location, geometric normalization, illumination normalization. During the face preprocessing, a rapid eye location method named ER (Eyeball Search) is proposed and implemented. Last, the improved LBP is adopted for recognition. Although the computational capability of the symbian platform is limited, the experimental results show good performance for recognition rate and time. in press</ce:simple-para></ce:abstract-sec></ce:abstract><ce:keywords class="keyword"><ce:section-title>Keywords</ce:section-title><ce:keyword><ce:text>Face recognition</ce:text></ce:keyword><ce:keyword><ce:text>Symbian platform</ce:text></ce:keyword><ce:keyword><ce:text>Rapid eye location</ce:text></ce:keyword><ce:keyword><ce:text>Eyeball Search</ce:text></ce:keyword><ce:keyword><ce:text>hierarchical multiscale LBP</ce:text></ce:keyword></ce:keywords></head><tail view="all"><ce:bibliography id="bibl0005" view="all"><ce:section-title>References</ce:section-title><ce:bibliography-sec id="bibs0005"><ce:bib-reference id="bib0005"><ce:label>[1]</ce:label><ce:other-ref><ce:textref>K. Venkataramani, S. Qidwai, B. VijayaKumar. Face authentication from cell phone camera images with illumination and temporal variations. IEEE Trans. on Systems, 2005, vol. 35, no. 3, 411-418.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0010"><ce:label>[2]</ce:label><ce:other-ref><ce:textref>Shih-Wei Chu, Mei-Chen Yeh, Kwang-Ting Cheng. A Real-time, Embedded Face-Annotation System. MM’08, Vancouver, British Columbia, Canada. 2008, October 26-31.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0015"><ce:label>[3]</ce:label><ce:other-ref><ce:textref>S. Z. Li, A.K. Jain. Handbook of Face Recognition. Springer-Verlag. New York; 2005.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0020"><ce:label>[4]</ce:label><ce:other-ref><ce:textref>Ming-Hsuan Yang, David Kriegman, Narendra Ahuja. Detecting faces in images: A survey. Pattern Analysis &amp; Machine Intelligence 24(1), January 2002, 34-58.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0025"><ce:label>[5]</ce:label><ce:other-ref><ce:textref>E. Hjelmas, B.K. Low. Face detection: A survey. Computer Vision and Image Understanding, 2001;83:236-274.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0030"><ce:label>[6]</ce:label><ce:other-ref><ce:textref>T. Ahonen, A. Hadid, M. Pietikainen, Face description with local binary patterns: Application to face recognition, Transactions on Pattern Analysis and Machine Intelligence, 2006; 28, no. 12, 2037-2041.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0035"><ce:label>[7]</ce:label><ce:other-ref><ce:textref>Ojala, T., Pietik̈ ainen, M., Harwood, D.: A comparative study of texture measures with classiﬁcation based on feature distributions. Pattern Recognition 29 (1996) 51-59.</ce:textref></ce:other-ref></ce:bib-reference><ce:bib-reference id="bib0040"><ce:label>[8]</ce:label><ce:other-ref><ce:textref>Zhenhua Guo, Lei Zhang, David Zhang, and Xuanqin Mou, “Hierarchical multiscale LBP for face and palmprint recognition”, Image Processing (ICIP), 2010; 4521-4524.</ce:textref></ce:other-ref></ce:bib-reference></ce:bibliography-sec></ce:bibliography></tail></article></xocs:serial-item></xocs:doc></originalText></full-text-retrieval-response>